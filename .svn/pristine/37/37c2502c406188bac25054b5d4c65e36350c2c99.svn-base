<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JFine.Common</name>
    </assembly>
    <members>
        <member name="T:JFine.Common.Attributes.EntityAttribute">
            <summary>
            获取实体类Attribute自定义属性
            </summary>
        </member>
        <member name="M:JFine.Common.Attributes.EntityAttribute.GetEntityKey``1">
            <summary>
             获取实体对象Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Attributes.EntityAttribute.GetEntityTable``1">
            <summary>
             获取实体对象表名
            </summary>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Attributes.EnumAttribute">
            <summary>
            获取实体类Attribute自定义属性
            </summary>
        </member>
        <member name="M:JFine.Common.Attributes.EnumAttribute.GetDescription(System.Enum)">
            <summary>
            返回枚举项的描述信息。
            </summary>
            <param name="value">要获取描述信息的枚举项。</param>
            <returns>枚举想的描述信息。</returns>
        </member>
        <member name="T:JFine.Common.Code.WriteLockDisposable">
            <summary>
            提供了一种方便的方法来实现对资源的锁定访问。
            </summary>
        </member>
        <member name="M:JFine.Common.Code.WriteLockDisposable.#ctor(System.Threading.ReaderWriterLockSlim)">
            <summary>
            初始化
            </summary>
            <param name="rwLock">读写锁.</param>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.DataTableToHashtableByKeyValue(System.Data.DataTable,System.String,System.String)">
            <summary>
            Hashtable根据key过滤表的内容
            </summary>
            <param name="dt">数据库表</param>
            <param name="keyField">键</param>
            <param name="valFiled">值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.DataTableToXML(System.Data.DataTable)">
            <summary>
            DataTable 转 XML
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.DataTableToArrayList(System.Data.DataTable)">
            <summary>
            DataTable 转 IList 行中是用Hashtable对象存
            </summary>
            <param name="dt"></param>
            <returns>行中是用Hashtable对象存</returns>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.DataTableToHashtable(System.Data.DataTable)">
            <summary>
            DataTable 转 DataTableToHashtable
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:JFine.Common.Data.DataTableHelper.DataTableToList(System.Data.DataTable)”忽略有格式错误的 XML 注释 -->
        <member name="M:JFine.Common.Data.DataTableHelper.DataRowToHashTable(System.Data.DataRow)">
            <summary>
            DataRow  转  HashTable
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.DataTableToIList``1(System.Data.DataTable)">
            <summary>
            DataTable 转 对象要LIST
            </summary>
            <param name="dt"></param>
            <returns>行中是对象的类，类的属性与数据字段一致</returns>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.GetNewDataTable(System.Data.DataTable,System.String)">
            <summary>
            根据条件过滤表的内容
            </summary>
            <param name="dt"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:JFine.Common.Data.DataTableHelper.SelectDistinct(System.Data.DataTable,System.String[])”忽略有格式错误的 XML 注释 -->
        <member name="M:JFine.Common.Data.DataTableHelper.IsExistRows(System.Data.DataTable)">
            <summary>
            检查DataTable 是否有数据行
            </summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.SortedTable(System.Data.DataTable,System.String[])">
            <summary>
            排序表的视图
            </summary>
            <param name="dt"></param>
            <param name="sorts"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.GetPagedTable(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            Datatable 分页
            </summary>
            <param name="dt"></param>
            <param name="PageIndex">当前页</param>
            <param name="PageSize">页大小</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Data.DataTableHelper.TransposeDt(System.Data.DataTable)">
            <summary>
            对DataTable 进行转置
            </summary>
            <param name="dt">被转置的DataTable</param>
            <returns>转置之后的DataTable</returns>
        </member>
        <member name="M:JFine.Common.Data.HashtableHelper.HashtableToXml(System.Collections.Hashtable)">
            <summary>
            Hashtable帮助类
            </summary>
        </member>
        <member name="M:JFine.Common.Data.HashtableHelper.GetModelToHashtable``1(``0)">
            <summary>
            实体类Model转Hashtable(反射)
            </summary>
        </member>
        <member name="T:JFine.Common.Data.ReaderToIListHelper">
            <summary>
            利用反射实现通用的DataReader转List、DataReader转实体类 
            </summary>
        </member>
        <member name="M:JFine.Common.Data.ReaderToIListHelper.DataTableToIDataReader(System.Data.IDataReader)">
            <summary>
             将IDataReader转换为DataTable
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Data.ReaderToIListHelper.DataTableToIDataReader(System.Data.IDataReader,System.Int32)">
            <summary>
             将IDataReader转换为DataTable
            </summary>
            <param name="reader"></param>
            <param name="flag">0:默认，1：大写，2：:小写</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.ExtList.GetPage``1(System.Collections.Generic.List{``0},System.Int32,System.Int32,System.Int32@)">
            <summary>
            获取表里某页的数据
            </summary>
            <param name="data">表数据</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">分页大小</param>
            <param name="allPage">返回总页数</param>
            <returns>返回当页表数据</returns>
        </member>
        <!-- 对于成员“M:JFine.Common.Extend.ExtList.IListToList``1(System.Collections.IList)”忽略有格式错误的 XML 注释 -->
        <member name="T:JFine.Common.Extend.LinqExtensions">
            <summary>
            Enables the efficient, dynamic composition of query predicates.
            </summary>
        </member>
        <member name="M:JFine.Common.Extend.LinqExtensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            组合And
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.LinqExtensions.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            组合Or
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.LinqExtensions.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            Combines the first expression with the second using the specified merge function.
            </summary>
        </member>
        <member name="T:JFine.Common.Extend.LinqExtensions.ParameterRebinder">
            <summary>
            ParameterRebinder
            </summary>
        </member>
        <member name="F:JFine.Common.Extend.LinqExtensions.ParameterRebinder.map">
            <summary>
            The ParameterExpression map
            </summary>
        </member>
        <member name="M:JFine.Common.Extend.LinqExtensions.ParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:JFine.Common.Extend.LinqExtensions.ParameterRebinder"/> class.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="M:JFine.Common.Extend.LinqExtensions.ParameterRebinder.ReplaceParameters(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression)">
            <summary>
            Replaces the parameters.
            </summary>
            <param name="map">The map.</param>
            <param name="exp">The exp.</param>
            <returns>Expression</returns>
        </member>
        <member name="M:JFine.Common.Extend.LinqExtensions.ParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits the parameter.
            </summary>
            <param name="p">The p.</param>
            <returns>Expression</returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.IsEmpty(System.String)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.IsEmpty(System.Nullable{System.Guid})">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.IsEmpty(System.Guid)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.IsEmpty(System.Object)">
            <summary>
            是否为空
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Add(System.Double,System.Double)">
            <summary>
            相加
            </summary>
            <param name="add1"></param>
            <param name="add2"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.sub(System.Double,System.Double)">
            <summary>
            相减
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.mul(System.Double,System.Double)">
            <summary>
            相乖
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.div(System.Double,System.Double)">
            <summary>
            相除
            </summary>
            <param name="d1"></param>
            <param name="d2"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToFormatString(System.Decimal)">
            <summary>
            格式化数字，三位加逗号
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.DateFormat(System.Object,System.String)">
            <summary>
            尝试格式化日期字符串
            </summary>
            <param name="date"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Description(System.Boolean)">
            <summary>
            获取描述
            </summary>
            <param name="value">布尔值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Description(System.Nullable{System.Boolean})">
            <summary>
            获取描述
            </summary>
            <param name="value">布尔值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Format(System.Int32,System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Format(System.Nullable{System.Int32},System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Format(System.Decimal,System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Format(System.Nullable{System.Decimal},System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Format(System.Double,System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Format(System.Nullable{System.Double},System.String)">
            <summary>
            获取格式化字符串
            </summary>
            <param name="number">数值</param>
            <param name="defaultValue">空值显示的默认文本</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.FormatRmb(System.Decimal)">
            <summary>
            获取格式化字符串,带￥
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.FormatRmb(System.Nullable{System.Decimal})">
            <summary>
            获取格式化字符串,带￥
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.FormatPercent(System.Decimal)">
            <summary>
            获取格式化字符串,带%
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.FormatPercent(System.Nullable{System.Decimal})">
            <summary>
            获取格式化字符串,带%
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.FormatPercent(System.Double)">
            <summary>
            获取格式化字符串,带%
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.FormatPercent(System.Nullable{System.Double})">
            <summary>
            获取格式化字符串,带%
            </summary>
            <param name="number">数值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.SafeValue``1(System.Nullable{``0})">
            <summary>
            安全返回值
            </summary>
            <param name="value">可空值</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.IsEmptyGuid(System.Guid)">
            <summary>
            判断是否为Guid.Empty
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.In(System.Int32,System.Int32[])">
            <summary>
            判断一个整型是否包含在指定的值内
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.DBValueOrNull(System.String)">
            <summary>
            返回值或DBNull.Value
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToInt(System.Object)">
            <summary>
            转换为整型
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToIntOrNull(System.Object)">
            <summary>
            转换为可空整型
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDouble(System.Object)">
            <summary>
            转换为双精度浮点数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDouble(System.Object,System.Int32)">
            <summary>
            转换为双精度浮点数,并按指定的小数位4舍5入
            </summary>
            <param name="data">数据</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDoubleOrNull(System.Object)">
            <summary>
            转换为可空双精度浮点数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDecimal(System.Object)">
            <summary>
            转换为高精度浮点数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDecimal(System.Object,System.Int32)">
            <summary>
            转换为高精度浮点数,并按指定的小数位4舍5入
            </summary>
            <param name="data">数据</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDecimalOrNull(System.Object)">
            <summary>
            转换为可空高精度浮点数
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDecimalOrNull(System.Object,System.Int32)">
            <summary>
            转换为可空高精度浮点数,并按指定的小数位4舍5入
            </summary>
            <param name="data">数据</param>
            <param name="digits">小数位数</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToInt(System.Guid)">
            <summary>
            将guid转换为int
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDate(System.Object)">
            <summary>
            转换为日期
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDateOrNull(System.Object)">
            <summary>
            转换为可空日期
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDateWeekString(System.DateTime)">
            <summary>
            返回带星期的日期格式
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToDateTimeWeekString(System.DateTime)">
            <summary>
            返回带星期的日期时间格式
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToString(System.Object)">
            <summary>
            转换为字符串
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToGuid(System.Int32)">
            <summary>
            将int类型转为GUID格式
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:JFine.Common.Extend.MyExtensions.ToString(System.Collections.Generic.IList{System.String},System.Char)”忽略有格式错误的 XML 注释 -->
        <member name="M:JFine.Common.Extend.MyExtensions.ToString``1(``0[],System.String)">
            <summary>
            将数组转换为符号分隔的字符串
            </summary>
            <param name="arr"></param>
            <param name="split">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToBool(System.Object)">
            <summary>
            转换为布尔值
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.GetBool(System.Object)">
            <summary>
            获取布尔值
            </summary>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToBoolOrNull(System.Object)">
            <summary>
            转换为可空布尔值
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ReplaceSql(System.String)">
            <summary>
            过滤sql
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ReplaceSelectSql(System.String)">
            <summary>
            过滤查询sql
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Replace1(System.String,System.String,System.String)">
            <summary>
            过滤字符串(不区分大小写)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.RemoveHTML(System.String)">
              <summary>   
              去除HTML标记   
              </summary>   
              <param   name="NoHTML">包括HTML的源码   </param>   
              <returns>已经去除后的文字</returns>   
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.RemoveScript(System.String)">
            <summary>
            过滤js脚本
            </summary>
            <param name="strFromText"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.RemovePageTag(System.String)">
            <summary>
            替换页面标签
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.GetImg(System.String)">
            <summary>
            取得html中的图片
            </summary>
            <param name="HTMLStr"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.GetImgs(System.String)">
            <summary>
            取得html中的所有图片
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.ToChineseSpell(System.String)">
            <summary>
            获取汉字拼音的第一个字母
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.getSpell(System.String)">
            <summary>
            获取汉字拼音
            </summary>
            <param name="cnChar"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Interruption(System.String,System.Int32,System.String)">
            <summary>
            截取字符串，汉字两个字节，字母一个字节
            </summary>
            <param name="str">字符串</param>
            <param name="strLength">字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.CutString(System.String,System.Int32,System.String)">
            <summary>
            截取字符串，汉字两个字节，字母一个字节
            </summary>
            <param name="str">字符串</param>
            <param name="strLength">字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Left(System.String,System.Int32)">
            <summary>
            获取左边多少个字符
            </summary>
            <param name="str"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Right(System.String,System.Int32)">
            <summary>
            获取右边多少个字符
            </summary>
            <param name="str"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Size(System.String)">
            <summary>
            得到实符串实际长度
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.RemoveSpace(System.String)">
            <summary>
            去除所有空格
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.RemovePunctuationOrEmpty(System.String)">
            <summary>
            去除字符串标点符号和空字符
            </summary>
            <param name="sourceString"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.InPunctuation(System.String)">
            <summary>
            字符串是否包含标点符号(不包括_下画线)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:JFine.Common.Extend.MyExtensions.HtmlEncode(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:JFine.Common.Extend.MyExtensions.UrlEncode(System.String)">
            <summary>
            URL编码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.UrlDecode(System.String)">
            <summary>
            URL解码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.MapPathExt(System.Web.HttpServerUtility,System.String)">
            <summary>
            获取与 Web 服务器上的指定虚拟路径相对应的物理文件路径。
            </summary>
            <param name="Server"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.SetCDataValue(System.Xml.Linq.XElement,System.String)">
            <summary>
            使用CDATA的方式将value保存在指定的element中
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            返回一个值，该值指示指定的 System.String 对象是否出现在此字符串中。
            </summary>
            <param name="source"></param>
            <param name="value">要搜寻的字符串。</param>
            <param name="comparisonType">指定搜索规则的枚举值之一</param>
            <returns>如果 value 参数出现在此字符串中，或者 value 为空字符串 ("")，则为 true；否则为 false</returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Contains(System.String[],System.String,System.StringComparison)">
            <summary>
            通过使用默认的相等或字符比较器确定序列是否包含指定的元素。
            </summary>
            <param name="source">要在其中定位某个值的序列。</param>
            <param name="value">要在序列中定位的值。</param>
            <param name="comparisonType">指定搜索规则的枚举值之一</param>
            <exception cref="T:System.ArgumentNullException">source 为 null</exception>
            <returns>如果源序列包含具有指定值的元素，则为 true；否则为 false。</returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.Serialize(System.Object)">
            <summary>
            序列化对象为xml字符串
            </summary>
            <param name="obj">要序列化的对象</param>
            <returns>xml格式字符串</returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.AesEncrypt(System.String)">
            <summary>
            AES加密字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.AesDecrypt(System.String)">
            <summary>
            AES解密字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.DesEncrypt(System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Extend.MyExtensions.DesDecrypt(System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Json.JsonHelper">
            <summary>
            转换Json格式帮助类
            </summary>
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.ArrayToJson(System.String[])">
            <summary>
            数组转Json
            </summary>
            <param name="strs"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.ToJson(System.Data.DataSet)">
            <summary>    
            DataSet转换为Json   
            </summary>    
            <param name="dataSet">DataSet对象</param>   
            <returns>Json字符串</returns>    
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.ToJson(System.Data.DataTable)">
            <summary>     
            Datatable转换为Json     
            </summary>    
            <param name="table">Datatable对象</param>     
            <returns>Json字符串</returns>     
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.ToJson(System.Data.DataTable,System.String)">
            <summary>    
            DataTable转换为Json     
            </summary>    
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.DataRowToJson(System.Data.DataRow)">
            <summary>
            数据行转Json
            </summary>
            <param name="dr">数据行</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.ToJson(System.Data.Common.DbDataReader)">
            <summary>     
            DataReader转换为Json     
            </summary>     
            <param name="dataReader">DataReader对象</param>     
            <returns>Json字符串</returns>  
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.String2Json(System.String)">
            <summary>
            过滤特殊字符
            </summary>
            <param name="s">字符串</param>
            <returns>json字符串</returns>
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.StringFormat(System.String,System.Type)">
            <summary>
            格式化字符型、日期型、布尔型
            </summary>
            <param name="str"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Json.JsonHelper.JsonCharFilter(System.String)">
            <summary>  
            Json特符字符过滤
            </summary>  
            <param name="sourceStr">要过滤的源字符串</param>  
            <returns>返回过滤的字符串</returns>  
        </member>
        <member name="T:JFine.Common.Log.LogHelper">
            <summary>
             企业应用框架的日志类
            </summary>    
        </member>
        <member name="M:JFine.Common.Log.LogHelper.#ctor">
            <summary>
            实例日志管理，以当前日期为文件名，如果文件不存在，则创建文件
            </summary>
        </member>
        <member name="M:JFine.Common.Log.LogHelper.#ctor(System.String)">
            <summary>
            实例日志管理，如果文件不存在，则创建文件
            </summary>
            <param name="_log">创建txt文件名称</param>
        </member>
        <member name="M:JFine.Common.Log.LogHelper.writeInfos(System.String)">
            <summary>
            向日志文件中写入日志
            </summary>
            <param name="messagestr"></param>
        </member>
        <member name="M:JFine.Common.Log.LogHelper.WriteLog(System.String)">
            <summary>
            写入日志内容
            </summary>
            <param name="msg">日志消息</param>
        </member>
        <member name="T:JFine.Common.Message.DataAccessException">
            <summary>
            数据访问层异常类，用于封装数据访问层引发的异常，以供 业务逻辑层 抓取
            </summary>
        </member>
        <member name="M:JFine.Common.Message.DataAccessException.#ctor(System.String,System.Exception)">
             <summary>
            使用异常消息与一个内部异常实例化一个 类的新实例
             </summary>
             <param name="message">异常消息</param>
             <param name="inner">用于封装在DalException内部的异常实例</param>
        </member>
        <member name="M:JFine.Common.Message.DataAccessException.ThrowBusinessException(System.Exception,System.String)">
             <summary>
            向调用层抛出数据访问层异常
             </summary>
             <param name="msg"> 自定义异常消息 </param>
             <param name="e"> 实际引发异常的异常实例 </param>
        </member>
        <member name="M:JFine.Common.Message.DataAccessException.ThrowDataAccessException(System.Exception,System.String)">
             <summary>
            向调用层抛出数据访问层异常
             </summary>
             <param name="msg"> 自定义异常消息 </param>
             <param name="e"> 实际引发异常的异常实例 </param>
        </member>
        <member name="M:JFine.Common.Message.DataAccessException.ThrowComponentException(System.Exception,System.String)">
            <summary>
                向调用层抛出组件异常
            </summary>
            <param name="msg"> 自定义异常消息 </param>
            <param name="e"> 实际引发异常的异常实例 </param>
        </member>
        <member name="T:JFine.Common.Message.ExceptionMessage">
            <summary>
            异常信息封装类
            </summary>
        </member>
        <member name="M:JFine.Common.Message.ExceptionMessage.#ctor(System.Exception,System.String,System.Boolean)">
             <summary>
            以自定义用户信息和异常对象实例化一个异常信息对象
             </summary>
             <param name="e"> 异常对象 </param>
             <param name="userMessage"> 自定义用户信息 </param>
             <param name="isHideStackTrace"> 是否隐藏异常堆栈信息 </param>
        </member>
        <member name="M:JFine.Common.Message.ExceptionMessage.GetSqlExceptionMessage(System.Int32)">
            <summary>
            由错误码返回指定的自定义SqlException异常信息
            </summary>
            <param name="number"> </param>
            <returns> </returns>
        </member>
        <member name="P:JFine.Common.Message.ExceptionMessage.UserMessage">
             <summary>
            用户信息，用于报告给用户的异常消息
             </summary>
        </member>
        <member name="P:JFine.Common.Message.ExceptionMessage.ExMessage">
             <summary>
            直接的Exception异常信息，即e.Message属性值
             </summary>
        </member>
        <member name="P:JFine.Common.Message.ExceptionMessage.ErrorDetails">
             <summary>
            异常输出的详细描述，包含异常消息，规模信息，异常类型，异常源，引发异常的方法及内部异常信息
             </summary>
        </member>
        <member name="M:JFine.Common.Message.ShortMessageHelper.postSMS(System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="mobile"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Message.ShortMessageHelper.getMessage">
            <summary>
            获取短信
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Message.ShortMessageHelper.getBalance">
            <summary>
            获取余额
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.CosSimilar.GetSimilarity(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32})">
            <summary>
            计算余弦相似度
            </summary>
            <param name="key1">关键词1</param>
            <param name="keyFr1">关键词词频1</param>
            <param name="key2">关键词2</param>
            <param name="keyFr2">关键词词频2</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.ExcelHelper.upExcelToDatatable(System.Web.HttpContextBase,System.String,System.Collections.Hashtable@)">
             <summary>
            上传excel 文件转化为Datatable
             </summary>
             <param name="context"></param>
        </member>
        <member name="M:JFine.Common.Offices.ExcelHelper.getMSFromDatatable(System.Data.DataTable,System.String,System.Int32)">
            <summary>
            获取导出excel流
            </summary>
            <param name="data">数据源</param>
            <param name="head">头部</param>
            <param name="type">头部标题类型</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:JFine.Common.Offices.ExcelHelper.getFileFromDatatable(System.Data.DataTable,System.String,System.String,System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:JFine.Common.Offices.ExcelHelper.getFileFromDatatable(System.Data.DataTable,System.String,System.String,System.String,System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:JFine.Common.Offices.ExcelHelper.getMergeFileFromDatatable(System.Data.DataTable,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            获取导出excel流
            </summary>
            <param name="data">数据源</param>
            <param name="head">头部</param>
            <param name="mergeColumn">合并依据列</param>
            <param name="mergeSIndex">合并起始列</param>
            <param name="mergeEIndex">合并结束列</param>
            <param name="type">头部标题类型</param>
            <returns>文件名</returns>
        </member>
        <member name="M:JFine.Common.Offices.ExcelHelper.getHSSFWorkbookFromDatatable(System.Data.DataTable,NPOI.HSSF.UserModel.HSSFWorkbook,System.String,System.String,System.String,System.Int32)">
            <summary>
            获取导出excel流
            </summary>
            <param name="data">数据源</param>
            <param name="head">头部</param>
            <param name="type">头部标题类型</param>
            <returns>文件名</returns>
        </member>
        <member name="M:JFine.Common.Offices.ExcelHelper.saveFlie(NPOI.HSSF.UserModel.HSSFWorkbook)">
            <summary>
            保存hssfworkbook到文件
            </summary>
            <param name="hssfworkbook"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.jiebaSplit.CutAll(System.String)">
            <summary>
            全模式
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.jiebaSplit.Cut(System.String)">
            <summary>
            精准模式
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.jiebaSplit.CutNoHMM(System.String)">
            <summary>
            精准模式-不带HMM
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.jiebaSplit.CutForSearch(System.String)">
            <summary>
            搜索模式
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.jiebaSplit.ExtractTags_TFIDF(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            基于TF-IDF算法的关键词提取
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.jiebaSplit.ExtractTags_TR(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            基于TextRank算法的关键词抽取
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.jiebaSplit.CutAndAnaly(System.String,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            精准模式(分词并统计词频)
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="F:JFine.Common.Offices.NPOIHelper.ListColumnsHead">
            <summary>
            导出列名
            </summary>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.ExportExcel(System.Data.DataTable,NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            导出Excel
            </summary>
            <param name="dgv"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.ExportExcel(NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            导出Excel
            </summary>
            <param name="dgv"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.ExportMergeExcel(System.Data.DataTable,NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            导出Excel
            </summary>
            <param name="dgv"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.ExportMergeExcelByColumn(System.Data.DataTable,System.String,System.Int32,System.Int32,NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            导出Excel
            </summary>
            <param name="dgv"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.ExportExcel(System.Data.DataTable,System.String)">
            <summary>
            导出Excel
            </summary>
            <param name="dgv"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.ExportExcel(System.Data.DataTable,System.IO.Stream)">
            <summary>
            导出Excel
            </summary>
            <param name="dgv"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.SaveExcelFile(NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            保存Excel文件
            </summary>
            <param name="excelWorkBook"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.SaveExcelFile(NPOI.HSSF.UserModel.HSSFWorkbook,System.IO.Stream)">
            <summary>
            保存Excel文件
            </summary>
            <param name="excelWorkBook"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.RetrunStream(System.Data.DataTable)">
            <summary>
            返回datatable的流
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.RetrunStream(System.Data.DataTable,NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            返回datatable的流
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.WriteDT2WB(System.Data.DataTable,NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            datatable写入workbook
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.CreateExcelFile">
            <summary>
            创建Excel文件
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.CreateHeader(NPOI.HSSF.UserModel.HSSFSheet)">
            <summary>
            创建excel表头
            </summary>
            <param name="dgv"></param>
            <param name="excelSheet"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.InsertRow(System.Data.DataTable,NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            插入数据行
            </summary>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.InsertMergeRow(System.Data.DataTable,NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            插入数据行
            </summary>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.InsertMergeRowByColumn(System.Data.DataTable,System.String,System.Int32,System.Int32,NPOI.HSSF.UserModel.HSSFWorkbook,System.String)">
            <summary>
            插入数据行
            </summary>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.InsertCell(System.Data.DataTable,System.Data.DataRow,NPOI.HSSF.UserModel.HSSFRow,NPOI.HSSF.UserModel.HSSFSheet,NPOI.HSSF.UserModel.HSSFWorkbook)">
            <summary>
            导出数据行
            </summary>
            <param name="dtSource"></param>
            <param name="drSource"></param>
            <param name="currentExcelRow"></param>
            <param name="excelSheet"></param>
            <param name="excelWorkBook"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.InsertAndMergeCell(System.Data.DataTable,System.Int32,System.Int32,System.Data.DataRow,NPOI.HSSF.UserModel.HSSFRow,NPOI.HSSF.UserModel.HSSFSheet,NPOI.HSSF.UserModel.HSSFWorkbook)">
            <summary>
            插入并合并数据行
            </summary>
            <param name="dtSource"></param>
            <param name="drIndex"></param>
            <param name="drSource"></param>
            <param name="currentExcelRow"></param>
            <param name="excelSheet"></param>
            <param name="excelWorkBook"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.InsertAndMergeCellByColum(System.Data.DataTable,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Data.DataRow,NPOI.HSSF.UserModel.HSSFRow,NPOI.HSSF.UserModel.HSSFSheet,NPOI.HSSF.UserModel.HSSFWorkbook)">
            <summary>
            插入并合并数据行
            </summary>
            <param name="dtSource"></param>
            <param name="drIndex"></param>
            <param name="drSource"></param>
            <param name="currentExcelRow"></param>
            <param name="excelSheet"></param>
            <param name="excelWorkBook"></param>
        </member>
        <member name="M:JFine.Common.Offices.NPOIHelper.FormatToDatatable(NPOI.HSSF.UserModel.HSSFWorkbook,System.Int32)">
            <summary>
            Excel格式化为DataTable
            </summary>
            <param name="hssfworkbook"></param>
            <param name="sheetIndex"></param>
            <returns></returns>
        </member>
        <member name="P:JFine.Common.Offices.ExcelHead.Name">
            <summary>
            列名称
            </summary>
        </member>
        <member name="P:JFine.Common.Offices.ExcelHead.font">
            <summary>
            字体
            </summary>
        </member>
        <member name="P:JFine.Common.Offices.ExcelHead.headStyle">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:JFine.Common.Offices.ExcelHead.isMerge">
            <summary>
            是否合并
            </summary>
        </member>
        <member name="P:JFine.Common.Offices.ExcelHead.firstRow">
            <summary>
            开始行，索引从0开始
            </summary>
        </member>
        <member name="P:JFine.Common.Offices.ExcelHead.lastRow">
            <summary>
            结束行，索引从0开始
            </summary>
        </member>
        <member name="P:JFine.Common.Offices.ExcelHead.firstCol">
            <summary>
            开始列，索引从0开始
            </summary>
        </member>
        <member name="P:JFine.Common.Offices.ExcelHead.lastCol">
            <summary>
            结束列，索引从0开始
            </summary>
        </member>
        <member name="T:JFine.Common.UI.Pagination">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:JFine.Common.UI.Pagination.rows">
            <summary>
            每页行数
            </summary>
        </member>
        <member name="P:JFine.Common.UI.Pagination.page">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:JFine.Common.UI.Pagination.sidx">
            <summary>
            排序列
            </summary>
        </member>
        <member name="P:JFine.Common.UI.Pagination.sord">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="P:JFine.Common.UI.Pagination.records">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:JFine.Common.UI.Pagination.total">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:JFine.Common.UI.Pagination.conditionJson">
            <summary>
            查询条件Json
            </summary>
        </member>
        <member name="T:JFine.Common.UI.QueryTree">
            <summary>
            树形结构查询
            </summary>
        </member>
        <member name="M:JFine.Common.UI.QueryTree.TreeWhere``1(System.Collections.Generic.List{``0},System.Predicate{``0},System.String,System.String)">
            <summary>
            树形查询条件
            </summary>
            <param name="entityList">数据源</param>
            <param name="condition">查询条件</param>
            <param name="primaryKey">主键</param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.UI.QueryTree.TreeWhere(System.Data.DataTable,System.String,System.String)">
            <summary>
            树形查询条件
            </summary>
            <param name="entityList">数据源</param>
            <param name="condition">查询条件</param>
            <param name="primaryKey">主键</param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Web.CookieHelper">
            <summary>
            Cookie帮助类
            </summary>
        </member>
        <member name="M:JFine.Common.Web.CookieHelper.WriteCookie(System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:JFine.Common.Web.CookieHelper.WriteCookie(System.String,System.String,System.Int32)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
            <param name="strValue">过期时间(分钟)</param>
        </member>
        <member name="M:JFine.Common.Web.CookieHelper.GetCookie(System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:JFine.Common.Web.CookieHelper.RemoveCookie(System.String)">
            <summary>
            删除Cookie对象
            </summary>
            <param name="CookiesName">Cookie对象名称</param>
        </member>
        <member name="T:JFine.Common.Web.RequestSession">
            <summary>
            Session 帮助类
            </summary>
        </member>
        <member name="M:JFine.Common.Web.SessionHelper.WriteSession``1(System.String,``0)">
            <summary>
            写Session
            </summary>
            <typeparam name="T">Session键值的类型</typeparam>
            <param name="key">Session的键名</param>
            <param name="value">Session的键值</param>
        </member>
        <member name="M:JFine.Common.Web.SessionHelper.GetSession``1(System.String)">
            <summary>
            读取Session的值
            </summary>
            <param name="key">Session的键名</param>        
        </member>
        <member name="M:JFine.Common.Web.SessionHelper.RemoveSession(System.String)">
            <summary>
            删除指定Session
            </summary>
            <param name="key">Session的键名</param>
        </member>
        <member name="T:JFine.Common.Web.SessionUser">
            <summary>
            存 Session对象
            </summary>
        </member>
        <member name="P:JFine.Common.Web.SessionUser.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:JFine.Common.Web.SessionUser.UserAccount">
            <summary>
            登陆账户
            </summary>
        </member>
        <member name="P:JFine.Common.Web.SessionUser.UserPwd">
            <summary>
            登陆密码
            </summary>
        </member>
        <member name="P:JFine.Common.Web.SessionUser.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="T:JFine.Common.Code.CommonHelper">
            <summary>
            公共帮助类
            </summary>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetInt(System.Object)">
            <summary>
            取得Int值,如果为Null 则返回０
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetInt(System.Object,System.Int32)">
            <summary>
            取得Int值,如果不成功则返回指定exceptionvalue值
            </summary>
            <param name="obj">要计算的值</param>
            <param name="exceptionvalue">异常时的返回值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.Getbyte(System.Object)">
            <summary>
            取得byte值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetLong(System.Object)">
            <summary>
            获得Long值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetLong(System.Object,System.Int64)">
            <summary>
            取得Long值,如果不成功则返回指定exceptionvalue值
            </summary>
            <param name="obj">要计算的值</param>
            <param name="exceptionvalue">异常时的返回值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetDecimal(System.Object)">
            <summary>
            取得Decimal值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetDateTime(System.Object)">
            <summary>
            取得DateTime值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetFormatDateTime(System.Object,System.String)">
            <summary>
            格式化日期 yyyy-MM-dd HH:mm
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetBool(System.Object)">
            <summary>
            取得bool值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetByte(System.Object)">
            <summary>
            取得byte[]
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetString(System.Object)">
            <summary>
            取得string值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.IsDateTime(System.String)">
            <summary>   
            判断用户输入是否为日期   
            </summary>   
            <param ></param>   
            <returns></returns>   
            <remarks>   
            可判断格式如下（其中-可替换为.，不影响验证)   
            YYYY | YYYY-MM |YYYY.MM| YYYY-MM-DD|YYYY.MM.DD | YYYY-MM-DD HH:MM:SS | YYYY.MM.DD HH:MM:SS | YYYY-MM-DD HH:MM:SS.FFF | YYYY.MM.DD HH:MM:SS:FF (年份验证从1000到2999年)
            </remarks>   
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.IsNumeric(System.Object)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.IsNumeric(System.String)">
            <summary>
            判断对象是否为Int32类型的数字
            </summary>
            <param name="Expression"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.IsDouble(System.Object)">
            <summary>
            是否为Double类型
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetStrArray(System.String)">
            <summary>
            将字符串转换为数组
            </summary>
            <param name="str">字符串</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetArrayStr(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            将数组转换为字符串
            </summary>
            <param name="list">List</param>
            <param name="speater">分隔符</param>
            <returns>String</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.StrToBool(System.Object,System.Boolean)">
            <summary>
            object型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.StrToBool(System.String,System.Boolean)">
            <summary>
            string型转换为bool型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的bool类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.ObjToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.StrToInt(System.String,System.Int32)">
            <summary>
            将字符串转换为Int32类型
            </summary>
            <param name="expression">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.ObjToDecimal(System.Object,System.Decimal)">
            <summary>
            Object型转换为decimal型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的decimal类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.StrToDecimal(System.String,System.Decimal)">
            <summary>
            string型转换为decimal型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的decimal类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.ObjToFloat(System.Object,System.Single)">
            <summary>
            Object型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.StrToFloat(System.String,System.Single)">
            <summary>
            string型转换为float型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.StrToDateTime(System.String,System.DateTime)">
            <summary>
            将对象转换为日期时间类型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.StrToDateTime(System.String)">
            <summary>
            将对象转换为日期时间类型
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.ObjectToDateTime(System.Object)">
            <summary>
            将对象转换为日期时间类型
            </summary>
            <param name="obj">要转换的对象</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.ObjectToDateTime(System.Object,System.DateTime)">
            <summary>
            将对象转换为日期时间类型
            </summary>
            <param name="obj">要转换的对象</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.ObjectToStr(System.Object)">
            <summary>
            将对象转换为字符串
            </summary>
            <param name="obj">要转换的对象</param>
            <returns>转换后的string类型结果</returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.CreateNo">
            <summary>
            自动生成编号  201008251145409865
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.RndNum(System.Int32)">
            <summary>
            生成0-9随机数
            </summary>
            <param name="codeNum">生成长度</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.Number(System.Int32)">
            <summary>
            生成随机数字
            </summary>
            <param name="length">生成长度</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.Number(System.Int32,System.Boolean)">
            <summary>
            生成随机数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetCheckCode(System.Int32)">
            <summary>
            生成随机字母字符串(数字字母混和)
            </summary>
            <param name="codeCount">待生成的位数</param>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetOrderNumber">
            <summary>
            根据日期和随机码生成订单号
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.SplitString(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.SplitString(System.String,System.String,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.WebPathTran(System.String)">
            <summary>
            路径转换（转换成绝对路径）
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.StartProcess(System.String)">
            <summary>
            启动进程
            </summary>
            <param name="processName">进程名称</param>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.TimerStart">
            <summary>
            计时器开始
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.TimerEnd(System.Diagnostics.Stopwatch)">
            <summary>
            计时器结束
            </summary>
            <param name="watch"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.RemoveDup(System.String[])">
            <summary>
            删除数组中的重复项
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.CommonHelper.GetTrustLevel">
            <summary>
            获取应用信任级别
            </summary>
            <returns>当前级别.</returns>
        </member>
        <member name="P:JFine.Common.Code.CommonHelper.GetGuid">
            <summary>
            获取一个全球唯一码GUID字符串
            </summary>
        </member>
        <member name="P:JFine.Common.Code.CommonHelper.Line">
            <summary>
            换行符
            </summary>
        </member>
        <member name="T:JFine.Common.Code.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.isBaseNumber(System.Int32)">
            <summary>
            判断是否是  2 8 10 16
            </summary>
            <param name="baseNumber"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.StringToBytes(System.String)">
            <summary>
            将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.BytesToString(System.Byte[])">
            <summary>
            将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToInt32``1(``0,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToInt32(System.String,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToInt32(System.Object,System.Int32)">
            <summary>
            将数据转换为整型  转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToBoolean``1(``0,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToBoolean(System.String,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToBoolean(System.Object,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToFloat``1(``0,System.Single)">
            <summary>
            将数据转换为单精度浮点型  转换失败 返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToFloat(System.Object,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToFloat(System.String,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDouble``1(``0,System.Double)">
            <summary>
            将数据转换为双精度浮点型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDouble``1(``0,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDouble(System.Object,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDouble(System.String,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDouble(System.Object,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDouble(System.String,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ConvertTo(System.Object,System.Type)">
            <summary>
            将数据转换为指定类型
            </summary>
            <param name="data">转换的数据</param>
            <param name="targetType">转换的目标类型</param>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ConvertTo``1(System.Object)">
            <summary>
            将数据转换为指定类型
            </summary>
            <typeparam name="T">转换的目标类型</typeparam>
            <param name="data">转换的数据</param>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDecimal``1(``0,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDecimal(System.String,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDateTime``1(``0,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ToDateTime(System.String,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ConvertToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:JFine.Common.Code.ConvertHelper.ConvertToDBC(System.String)">
             <summary> 转半角的函数(DBC case) </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="T:JFine.Common.Code.DateTimeHelper">
            <summary>
            日期帮助类
            </summary>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetToday">
            <summary>
            当前日期(yyyy-MM-dd)
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetToday(System.String)">
            <summary>
            当前日期自定义格式
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetDate(System.Int32)">
            <summary>
            当前日期 加添加，减天数 -1、1
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetDate(System.DateTime,System.Int32)">
            <summary>
            指定日期 加添加，减天数 -1、1
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetNumbersWeekDay(System.DateTime)">
            <summary>
            获取指定日期的周数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetDaysOfYear(System.Int32)">
            <summary>返回本年有多少天</summary>
            <param name="iYear">年份</param>
            <returns>本年的天数</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetDaysOfYear(System.DateTime)">
            <summary>本年有多少天</summary>
            <param name="dt">日期</param>
            <returns>本天在当年的天数</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetDaysOfMonth(System.Int32,System.Int32)">
            <summary>本月有多少天</summary>
            <param name="iYear">年</param>
            <param name="Month">月</param>
            <returns>天数</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetDaysOfMonth(System.DateTime)">
            <summary>本月有多少天</summary>
            <param name="dt">日期</param>
            <returns>天数</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetWeekNameOfDay(System.DateTime)">
            <summary>返回当前日期的星期名称</summary>
            <param name="dt">日期</param>
            <returns>星期名称</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetWeekNumberOfDay(System.DateTime)">
            <summary>返回当前日期的星期编号</summary>
            <param name="dt">日期</param>
            <returns>星期数字编号</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetWeekAmount(System.Int32)">
            <summary>
            获取某一年有多少周
            </summary>
            <param name="year">年份</param>
            <returns>该年周数</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.GetWeekOfYear(System.DateTime)">
            <summary>
            获取某一日期是该年中的第几周
            </summary>
            <param name="dt">日期</param>
            <returns>该日期在该年中的周数</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.WeekRange(System.Int32,System.Int32,System.DateTime@,System.DateTime@)">
            <summary>
            根据某年的第几周获取这周的起止日期
            </summary>
            <param name="year"></param>
            <param name="weekOrder"></param>
            <param name="firstDate"></param>
            <param name="lastDate"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.DiffDays(System.DateTime,System.DateTime)">
            <summary>
            返回两个日期之间相差的天数
            </summary>
            <param name="dtfrm">两个日期参数</param>
            <param name="dtto">两个日期参数</param>
            <returns>天数</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.DiffSeconds(System.DateTime,System.DateTime)">
            <summary>
            返回两个日期之间相差的秒数
            </summary>
            <param name="dtfrm">两个日期参数</param>
            <param name="dtto">两个日期参数</param>
            <returns>天数</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.IsRuYear(System.Int32)">
            <summary>判断当前年份是否是闰年，私有函数</summary>
            <param name="iYear">年份</param>
            <returns>是闰年：True ，不是闰年：False</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.ToDate(System.String)">
            <summary>
            将输入的字符串转化为日期。如果字符串的格式非法，则返回当前日期。
            </summary>
            <param name="strInput">输入字符串</param>
            <returns>日期对象</returns>
        </member>
        <member name="M:JFine.Common.Code.DateTimeHelper.ToString(System.DateTime,System.String)">
            <summary>
            将日期对象转化为格式字符串
            </summary>
            <param name="oDateTime">日期对象</param>
            <param name="strFormat">
            格式：
            	"SHORTDATE"===短日期
            	"LONGDATE"==长日期
            	其它====自定义格式
            </param>
            <returns>日期字符串</returns>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.ShortDate">
            <summary>
            短日期格式(yyyy/MM/dd)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.LongDate">
            <summary>
            长日期格式(yyyy月MM日dd日)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.ShortDateTime">
            <summary>
            日期时间(yyyy-MM-dd HH:mm)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.ShortDateTimeS">
            <summary>
            日期时间(yyyy-MM-dd HH:mm:ss)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.ShortDateTimeMS3">
            <summary>
            日期时间(yyyy-MM-dd HH:mm:ss:fff)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.ShortDateTimeMS4">
            <summary>
            日期时间(yyyy-MM-dd HH:mm:ss:ffff)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.LongDateTime">
            <summary>
            日期时间(yyyy年MM月dd日 HH时mm分)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.LongDateTimeS">
            <summary>
            日期时间(yyyy年MM月dd日 HH时mm分ss秒)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.LongTime">
            <summary>
            日期时间(yyyy年MM月dd日 HH时mm分)
            </summary>
        </member>
        <member name="P:JFine.Common.Code.DateTimeHelper.ShortTime">
            <summary>
            日期时间(yyyy年MM月dd日 HH时mm分)
            </summary>
        </member>
        <member name="M:JFine.Common.Web.HttpHelper.HttpPost(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            HTTP POST方式请求数据
            </summary>
            <param name="url">URL.</param>
            <param name="param">POST的数据</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.HttpHelper.HttpPost(System.String,System.String)">
            <summary>
            HTTP POST方式请求数据
            </summary>
            <param name="url">URL.</param>
            <param name="param">POST的数据</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.HttpHelper.HttpPut(System.String,System.String)">
            <summary>
            HTTP Put方式请求数据.
            </summary>
            <param name="url">URL.</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.HttpHelper.HttpDelete(System.String,System.String)">
            <summary>
            HTTP Delete方式请求数据.
            </summary>
            <param name="url">URL.</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.HttpHelper.HttpGet(System.String,System.Collections.Hashtable)">
            <summary>
            HTTP GET方式请求数据.
            </summary>
            <param name="url">URL.</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.HttpHelper.HttpPost(System.String,System.Collections.Generic.IDictionary{System.Object,System.Object},System.Byte[])">
            <summary>
            HTTP POST方式请求数据(带图片)
            </summary>
            <param name="url">URL</param>        
            <param name="param">POST的数据</param>
            <param name="fileByte">图片</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.HttpHelper.CreateHttpClient(System.String)">
            <summary>
            创建HttpClient
            </summary>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Code.PinyinHelper">
            <summary>
            汉字转换拼音
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.IsConnectedInternet">
            <summary>
            检测本机是否联网
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.UrlEncode(System.String)">
            <summary>
            URL字符编码
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.UrlDecode(System.String)">
            <summary>
            URL字符解码
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetIP">
            <summary>    
            获得当前页面客户端的IP    
            </summary>    
            <returns>当前页面客户端的IP</returns>    
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.buildurl(System.String,System.String)">
            <summary>
            中去除指定参数
            </summary>
            <param name="url">地址</param>
            <param name="param">参数</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetWebClientIp">
            <summary>
            获取Web客户端的Ip
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetWebRemoteIp">
            <summary>
            获取Web远程Ip
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetLanIp">
            <summary>
            获取局域网IP
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetCurrentFullHost">
            <summary>
            得到当前完整主机头
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetHost">
            <summary>
            得到主机头
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetDnsSafeHost">
            <summary>
            得到主机名
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetWebClientHostName">
            <summary>
            获取Web客户端主机名
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.NetCardInfo">
            <summary>
            返回描述本地计算机上的网络接口的对象(网络接口也称为网络适配器)。
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetMacByNetworkInterface">
            <summary>
             通过NetworkInterface读取网卡Mac
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetLocation(System.String)">
            <summary>
            获取IP地址信息
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetClientOSName">
            <summary>
            获取浏览器端操作系统名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.IsMobile">
            <summary>
            判断请求是否来自移动端
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetVirSessionCount">
            <summary>
            虚拟目录Session总数
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetVirSessionTime">
            <summary>
            Session时间
            </summary>
            <returns>分钟</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetVirApplictionCount">
            <summary>
            虚拟目录Application总数
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetServerLanguage">
            <summary>
            获取服务器区域语言
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetUserInfo">
            <summary>
            用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetCupCount">
            <summary>
            CPU个数
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetCupType">
            <summary>
            CPU类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.PhysicalMemory">
            <summary>
            获取物理内存
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.AvailableMemory">
            <summary>
            获取可用物理内存
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetServerAppN">
            <summary>
            应用程序占用内存 
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetAspNetN">
            <summary>
            AspNet 内存占用
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetServerDuration">
            <summary>
            开机运行时长 
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetAspNetCpu">
            <summary>
            AspNet CPU时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetPrStart">
            <summary>
            进程开始时间 
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetServerFso">
            <summary>
            FSO 文本文件读写
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetServerTimeOut">
            <summary>
            //本页执行时间 
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetServerString(System.String)">
            <summary>
            返回指定的服务器变量信息
            </summary>
            <param name="strName">服务器变量名</param>
            <returns>服务器变量信息</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetOSVersion">
            <summary>
            获取服务器系统信息
            </summary>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetNetVersion">
            <summary>
            获取服务器.net版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetDataBaseLength">
            <summary>
            获取数据库大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.DirSize(System.IO.DirectoryInfo)">
            <summary>
            递归文件目录，返回目录下所有文件大小
            </summary>
            <param name="d">传入的路径</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetDirSize">
            <summary>
            调用DirSize方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.IsPost">
            <summary>
            判断当前页面是否接收到了Post请求
            </summary>
            <returns>是否接收到了Post请求</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.IsGet">
            <summary>
            判断当前页面是否接收到了Get请求
            </summary>
            <returns>是否接收到了Get请求</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetUrlReferrer">
            <summary>
            返回上一个页面的地址
            </summary>
            <returns>上一个页面的地址</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetRawUrl">
            <summary>
            获取当前请求的原始 URL(URL 中域信息之后的部分,包括查询字符串(如果存在))
            </summary>
            <returns>原始 URL</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.IsBrowserGet">
            <summary>
            判断当前访问是否来自浏览器软件
            </summary>
            <returns>当前访问是否来自浏览器软件</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.IsSearchEnginesGet">
            <summary>
            判断是否来自搜索引擎链接
            </summary>
            <returns>是否来自搜索引擎链接</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetUrl">
            <summary>
            获得当前完整Url地址
            </summary>
            <returns>当前完整Url地址</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetPageName">
            <summary>
            获得当前页面的名称
            </summary>
            <returns>当前页面的名称</returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.GetParamCount">
            <summary>
            返回表单或Url参数的总个数
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.getDataFromRequestForm(System.Web.HttpContext)">
            <summary>
            返回form参数集合
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.getDataFromRequestForm_1(System.Web.HttpContext)">
            <summary>
            返回form参数集合(去除form默认的元素)
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.RequestHelper.RestartApplication">
            <summary>
            重启应用
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.GetScriptNameQueryString">
            <summary>
            获取当前访问页面地址参数
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.GetScriptName">
            <summary>
            获取当前访问页面地址
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.GetScriptUrl">
            <summary>
            获取当前访问页面Url
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.GetScriptNameQuery">
            <summary>
             获取当前访问页面 参数
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.Ip">
            <summary>
            获取Ip
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.Host">
            <summary>
            获取主机名
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.Browser">
            <summary>
            获取浏览器信息
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ComputerUserName">
            <summary>
            计算机用户
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ComputerName">
            <summary>
            计算机名称
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.MachineName">
            <summary>
            服务器名称
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ServiveSystem">
            <summary>
            服务器操作系统
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ServiceDomainName">
            <summary>
            服务器域名
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ServiceIP">
            <summary>
            服务器IP地址
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ServicePort">
            <summary>
            网站端口号
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ServiceIIS">
            <summary>
            服务器IIS版本
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ServiceNetVersion">
            <summary>
            服务器.NET解释引擎版本
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ServiceTime">
            <summary>
            服务器时间
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.ServicePath">
            <summary>
            网站绝对路径
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.AppPath">
            <summary>
            网站应用根目录
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.DataBaseLength">
            <summary>
            数据库大小
            </summary>
        </member>
        <member name="P:JFine.Common.Web.RequestHelper.GetSystemLength">
            <summary>
            获取程序占用空间大小
            </summary>
        </member>
        <member name="T:JFine.Common.Web.RequestHelper.obj">
            <summary>
            百度接口
            </summary>
        </member>
        <member name="T:JFine.Common.Web.RequestHelper.objex">
            <summary>
            聚合数据
            </summary>
        </member>
        <member name="T:JFine.Common.Code.RMBHelper">
            <summary>
            转换人民币大小金额
            </summary>
        </member>
        <member name="M:JFine.Common.Code.RMBHelper.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:JFine.Common.Code.RMBHelper.CmycurD(System.String)">
            
            <summary> 
            一个重载，将字符串先转换成数字在调用CmycurD(decimal num) 
            </summary> 
            <param name="num">用户输入的金额，字符串形式未转成decimal</param> 
            <returns></returns> 
        </member>
        <member name="T:JFine.Common.Code.SqlFilterHelper">
            <summary>
            防注入过滤函数
            </summary>
        </member>
        <member name="M:JFine.Common.Code.SqlFilterHelper.Filter(System.String)">
            <summary>
             防注入过滤函数
            </summary>
            <param name="inputString">需要过滤字符串</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="M:JFine.Common.Code.SqlFilterHelper.SqlFilters(System.String)">
            <summary>
             过滤字符串中注入SQL脚本的方法
            </summary>
            <param name="source">传入的字符串</param>
            <returns>过滤后的字符串</returns>
        </member>
        <member name="T:JFine.Common.Code.SqlParam">
            <summary>
            存放参数【键，键值】
            </summary>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.WriteString(System.Object,System.String)">
            <summary>
            web页面书写值到页面
            </summary>
            <param name="obj"></param>
            <param name="curValue"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.GetLength(System.String)">
            <summary>   
            得到字符串的长度，一个汉字算2个字符   
            </summary>   
            <param name="str">字符串</param>   
            <returns>返回字符串长度</returns>   
        </member>
        <member name="M:JFine.Common.Code.StringHelper.FormatTextArea(System.String)">
            <summary>
            格式化TextArea输入内容为html显示
            </summary>
            <param name="s">要格式化内容</param>
            <returns>完成内容</returns>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.GetOmitString(System.String,System.Int32,System.String)">
            <summary>
            省略字符串
            </summary>
            <param name="RawString">字符</param>
            <param name="Length">字节</param>
            <param name="status">是否开启省略字符串 0：否，1：是</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.DelLastLength(System.String,System.Int32)">
            <summary>
            删除最后结尾的长度
            </summary>
            <param name="str"></param>
            <param name="Length"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.getSequenceAutoAddZero(System.String,System.Int32)">
            <summary>
            字符串补零
            </summary>
            <param name="sequenceName">序列号key</param>
            <param name="num">位数  不足左补零</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.AddZeroString(System.Int32)">
             <summary>
            补零
             </summary>
             <param name="temp"></param>
             <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.getDoubleFromString(System.String)">
            <summary>
            字符串转double
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.StringHelper.getIntFromString(System.String)">
            <summary>
            字符串转int
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Code.ValidateUtil">
            <summary>
            各种输入格式验证辅助类
            </summary>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.GetStringLength(System.String)">
            <summary>
            返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns>字符长度</returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidUserName(System.String)">
            <summary>
            检测用户名格式是否有效
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidPassword(System.String)">
            <summary>
            密码有效性
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidInt(System.String)">
            <summary>
            int有效性
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsNumber(System.String)">
            <summary>
            是否数字字符串
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsNumberSign(System.String)">
            <summary>
            是否数字字符串 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsDecimal(System.String)">
            <summary>
            是否是浮点数
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsDecimalSign(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsHasCHZN(System.String)">
            <summary>
            检测是否有中文字符
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.GetCHZNLength(System.String)">
            <summary> 
            检测含有中文字符串的实际长度 
            </summary> 
            <param name="str">字符串</param> 
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsIdCard(System.String)">
            <summary>
            验证身份证是否合法  15 和  18位两种
            </summary>
            <param name="idCard">要验证的身份证</param>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsEmail(System.String)">
            <summary>
            是否是邮件地址
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidZip(System.String)">
            <summary>
            邮编有效性
            </summary>
            <param name="zip"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidPhone(System.String)">
            <summary>
            固定电话有效性
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidMobile(System.String)">
            <summary>
            手机有效性
            </summary>
            <param name="strMobile"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidPhoneAndMobile(System.String)">
            <summary>
            电话有效性（固话和手机 ）
            </summary>
            <param name="strVla"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidURL(System.String)">
            <summary>
            Url有效性
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidIP(System.String)">
            <summary>
            IP有效性
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsValidDomain(System.String)">
            <summary>
            domain 有效性
            </summary>
            <param name="host">域名</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsBase64String(System.String)">
            <summary>
            判断是否为base64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsGuid(System.String)">
            <summary>
            验证字符串是否是GUID
            </summary>
            <param name="guid">字符串</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsDate(System.String)">
            <summary>
            判断输入的字符是否为日期
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.IsDateHourMinute(System.String)">
            <summary>
            判断输入的字符是否为日期,如2004-07-12 14:25|||1900-01-01 00:00|||9999-12-31 23:59
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.CheckMathLength(System.String,System.Int32)">
            <summary>
            检查字符串最大长度，返回指定长度的串
            </summary>
            <param name="sqlInput">输入字符串</param>
            <param name="maxLength">最大长度</param>
            <returns></returns>			
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.Encode(System.String)">
            <summary>
            转换成 HTML code
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:JFine.Common.Code.ValidateUtil.Decode(System.String)">
             <summary>
            解析html成 普通文本
             </summary>
             <param name="str">string</param>
             <returns>string</returns>
        </member>
        <member name="M:JFine.Common.Config.ConfigHelper.GetValue(System.String)">
            <summary>
            根据Key取Value值
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:JFine.Common.Config.ConfigHelper.SetValue(System.String,System.String)">
            <summary>
            根据Key修改Value
            </summary>
            <param name="key">要修改的Key</param>
            <param name="value">要修改为的值</param>
        </member>
        <member name="T:JFine.Common.Image.Thumbnail">
            <summary>
            Thumbnail 的摘要说明。
            </summary>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.SetImage(System.String)">
            <summary>
            创建
            </summary>
            <param name="FileName">原始图片路径</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.ThumbnailCallback">
            <summary>
            回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.GetImage(System.Int32,System.Int32)">
            <summary>
            生成缩略图,返回缩略图的Image对象
            </summary>
            <param name="Width">缩略图宽度</param>
            <param name="Height">缩略图高度</param>
            <returns>缩略图的Image对象</returns>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.SaveThumbnailImage(System.Int32,System.Int32)">
            <summary>
            保存缩略图
            </summary>
            <param name="Width"></param>
            <param name="Height"></param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.SaveImage(System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            生成缩略图并保存
            </summary>
            <param name="Width">缩略图的宽度</param>
            <param name="Height">缩略图的高度</param>
            <param name="imgformat">保存的图像格式</param>
            <returns>缩略图的Image对象</returns>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.SaveImage(System.Drawing.Image,System.String,System.Drawing.Imaging.ImageCodecInfo)">
            <summary>
            保存图片
            </summary>
            <param name="image">Image 对象</param>
            <param name="savePath">保存路径</param>
            <param name="ici">指定格式的编解码参数</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.GetCodecInfo(System.String)">
            <summary>
            获取图像编码解码器的所有相关信息
            </summary>
            <param name="mimeType">包含编码解码器的多用途网际邮件扩充协议 (MIME) 类型的字符串</param>
            <returns>返回图像编码解码器的所有相关信息</returns>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.ResizeImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            计算新尺寸
            </summary>
            <param name="width">原始宽度</param>
            <param name="height">原始高度</param>
            <param name="maxWidth">最大新宽度</param>
            <param name="maxHeight">最大新高度</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.GetFormat(System.String)">
            <summary>
            得到图片格式
            </summary>
            <param name="name">文件名称</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.MakeSquareImage(System.Drawing.Image,System.String,System.Int32)">
            <summary>
            制作小正方形
            </summary>
            <param name="image">图片对象</param>
            <param name="newFileName">新地址</param>
            <param name="newSize">长度或宽度</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.MakeSquareImage(System.String,System.String,System.Int32)">
            <summary>
            制作小正方形
            </summary>
            <param name="fileName">图片文件名</param>
            <param name="newFileName">新地址</param>
            <param name="newSize">长度或宽度</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.MakeRemoteSquareImage(System.String,System.String,System.Int32)">
            <summary>
            制作远程小正方形
            </summary>
            <param name="url">图片url</param>
            <param name="newFileName">新地址</param>
            <param name="newSize">长度或宽度</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.MakeThumbnailImage(System.Drawing.Image,System.String,System.Int32,System.Int32)">
            <summary>
            制作缩略图
            </summary>
            <param name="original">图片对象</param>
            <param name="newFileName">新图路径</param>
            <param name="maxWidth">最大宽度</param>
            <param name="maxHeight">最大高度</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.MakeThumbnailImage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            制作缩略图
            </summary>
            <param name="fileName">文件名</param>
            <param name="newFileName">新图路径</param>
            <param name="maxWidth">最大宽度</param>
            <param name="maxHeight">最大高度</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.MakeThumbnailImage(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="fileName">源图路径（绝对路径）</param>
            <param name="newFileName">缩略图路径（绝对路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>    
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.MakeThumbnailImage(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            裁剪图片并保存
            </summary>
            <param name="fileName">源图路径（绝对路径）</param>
            <param name="newFileName">缩略图路径（绝对路径）</param>
            <param name="maxWidth">缩略图宽度</param>
            <param name="maxHeight">缩略图高度</param>
            <param name="cropWidth">裁剪宽度</param>
            <param name="cropHeight">裁剪高度</param>
            <param name="X">X轴</param>
            <param name="Y">Y轴</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.MakeRemoteThumbnailImage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            制作远程缩略图
            </summary>
            <param name="url">图片URL</param>
            <param name="newFileName">新图路径</param>
            <param name="maxWidth">最大宽度</param>
            <param name="maxHeight">最大高度</param>
        </member>
        <member name="M:JFine.Common.Image.Thumbnail.GetRemoteImage(System.String)">
            <summary>
            获取图片流
            </summary>
            <param name="url">图片URL</param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Message.MailHelper">
            <summary>
            邮件帮助类
            </summary>
        </member>
        <member name="F:JFine.Common.Message.MailHelper.MailServer">
            <summary>
            邮件服务器地址
            </summary>
        </member>
        <member name="F:JFine.Common.Message.MailHelper.MailUserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:JFine.Common.Message.MailHelper.MailPassword">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:JFine.Common.Message.MailHelper.MailName">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:JFine.Common.Message.MailHelper.Send(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            同步发送邮件
            </summary>
            <param name="to">邮件接收人,支持发送多个人每个地址用 , 号隔开</param>
            <param name="subject">主题</param>
            <param name="body">内容</param>
            <param name="encoding">编码</param>
            <param name="isBodyHtml">是否Html</param>
            <param name="enableSsl">是否SSL加密连接</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:JFine.Common.Message.MailHelper.SendByThread(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            异步发送邮件 独立线程
            </summary>
            <param name="to">邮件接收人,支持发送多个人每个地址用 , 号隔开</param>
            <param name="displayName">显示名称</param>
            <param name="title">邮件标题</param>
            <param name="body">邮件内容</param>
            <param name="port">端口号</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Message.MailHelper.Send(System.String,System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="Dep_Email">发送人、支持发送多个人每个地址用 ; 号隔开</param>
            <param name="Mis_Name">任务名称</param>
            <param name="Mis_Describe">内容</param>
            <param name="File_Path">附件</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Encrypt.AESEncryption.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="encryptString"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Encrypt.AESEncryption.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="decryptString"></param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Encrypt.DEncrypt">
            <summary>
            Encrypt 的摘要说明。
            Copyright (C) Maticsoft
            </summary>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Encrypt(System.String)">
            <summary>
            使用缺省密钥字符串加密string
            </summary>
            <param name="original">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Decrypt(System.String)">
            <summary>
            使用缺省密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Encrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串加密string
            </summary>
            <param name="original">原始文字</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>密文</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Decrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Decrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            使用给定密钥字符串解密string,返回指定编码方式明文
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>明文</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Decrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串解密byte[]
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Encrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串加密
            </summary>
            <param name="original">原始数据</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.MakeMD5(System.Byte[])">
            <summary>
            生成MD5摘要
            </summary>
            <param name="original">数据源</param>
            <returns>摘要</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥加密
            </summary>
            <param name="original">明文</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DEncrypt.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥解密数据
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="T:JFine.Common.Encrypt.DESEncrypt">
            <summary>
            DES加密/解密类。
            Copyright (C) Maticsoft
            </summary>
        </member>
        <member name="M:JFine.Common.Encrypt.DESEncrypt.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DESEncrypt.Encrypt(System.String,System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:JFine.Common.Encrypt.DESEncrypt.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Encrypt.DESEncrypt.Decrypt(System.String,System.String)">
            <summary> 
            解密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="T:JFine.Common.Encrypt.HashEncode">
            <summary>
            得到随机安全码（哈希加密）。
            </summary>
        </member>
        <member name="M:JFine.Common.Encrypt.HashEncode.GetSecurity">
            <summary>
            得到随机哈希加密字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Encrypt.HashEncode.GetRandomValue">
            <summary>
            得到一个随机数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Encrypt.HashEncode.HashEncoding(System.String)">
            <summary>
            哈希加密一个字符串
            </summary>
            <param name="Security"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Encrypt.HashEncode.#ctor(System.Boolean,System.Boolean)">
            
            <summary>
            类初始化，此类提供MD5，SHA1，SHA256，SHA512等四种算法，加密字串的长度依次增大。
            </summary>
            <param name="IsCaseSensitive">是否区分大小写</param>
            <param name="IsReturnNum">是否返回为加密后字符的Byte代码</param>
        </member>
        <member name="M:JFine.Common.Encrypt.HashEncode.MD5System(System.String)">
            <summary>
            .net系统的MD5加密方法
            </summary>
            <param name="strIN"></param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Encrypt.Md5Helper">
            <summary>
            MD5加密帮助类
            </summary>
        </member>
        <member name="M:JFine.Common.Encrypt.Md5Helper.MD5(System.String,System.Int32)">
            <summary>
            MD5加密
            </summary>
            <param name="str">加密字符</param>
            <param name="code">加密位数16/32</param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.Encrypt.RSACryption">
            <summary> 
            RSA加密解密及RSA签名和验证
            </summary> 
        </member>
        <member name="M:JFine.Common.Encrypt.RSACryption.RSAKey(System.String@,System.String@)">
            <summary>
            RSA 的密钥产生 产生私钥 和公钥 
            </summary>
            <param name="xmlKeys"></param>
            <param name="xmlPublicKey"></param>
        </member>
        <member name="T:JFine.Common.DotNetFile.DirFileHelper">
            <summary>
            文件操作夹
            </summary>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在,如果存在则返回true。
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.Contains(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.Contains(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param> 
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CreateDir(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="dir">要创建的目录路径包括目录名</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.DeleteDir(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="dir">要删除的目录路径和名称</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="file">要删除的文件路径和名称</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CreateFile(System.String,System.String)">
            <summary>
            创建文件
            </summary>
            <param name="dir">带后缀的文件名</param>
            <param name="pagestr">文件内容</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.MoveFile(System.String,System.String)">
            <summary>
            移动文件(剪贴--粘贴)
            </summary>
            <param name="dir1">要移动的文件的路径及全名(包括后缀)</param>
            <param name="dir2">文件移动到新的位置,并指定新的文件名</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CopyFile(System.String,System.String)">
            <summary>
            复制文件
            </summary>
            <param name="dir1">要复制的文件的路径已经全名(包括后缀)</param>
            <param name="dir2">目标位置,并指定新的文件名</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            复制文件
            </summary>
            <param name="sourceFileName">源文件名</param>
            <param name="destFileName">目标文件名</param>
            <param name="overwrite">当目标文件存在时是否覆盖</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetDateDir">
            <summary>
            根据时间得到目录名yyyyMMdd
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetDateFile">
            <summary>
            根据时间得到文件名HHmmssff
            </summary>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CopyFolder(System.String,System.String)">
            <summary>
            复制文件夹(递归)
            </summary>
            <param name="varFromDirectory">源文件夹路径</param>
            <param name="varToDirectory">目标文件夹路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.ExistsFile(System.String)">
            <summary>
            检查文件,如果文件不存在则创建  
            </summary>
            <param name="FilePath">路径,包括文件名</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.DeleteFolderFiles(System.String,System.String)">
            <summary>
            删除指定文件夹对应其他文件夹里的文件
            </summary>
            <param name="varFromDirectory">指定文件夹路径</param>
            <param name="varToDirectory">对应其他文件夹路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CreateFile(System.String)">
            <summary>
            创建一个文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetFileSize_int(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetFileSize_string(System.String)">
            <summary>
            根据文件名，得到文件的大小，单位分别是GB/MB/KB
            </summary>
            <param name="FileFullPath">文件名</param>
            <returns>返回文件大小</returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.CountSize(System.Int64)">
            <summary>
            计算文件大小函数(保留两位小数),Size为字节大小
            </summary>
            <param name="Size">初始文件大小</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetDictSize(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.Move(System.String,System.String)">
            <summary>
            将文件移动到指定目录
            </summary>
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>
            <param name="descDirectoryPath">移动到的目录的绝对路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.ClearDirectory(System.String)">
            <summary>
            清空指定目录下所有文件及子目录,但该目录依然保存.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.FileToBytes(System.String)">
            <summary>
            文件转字节流
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.DirFileHelper.UpLoadFile(System.Byte[],System.String)">
            <summary>
            把流生成文件
            </summary>
            <param name="buffer">文件流</param>
            <param name="fileName">要生成的文件名【路】</param>
        </member>
        <member name="T:JFine.Common.DotNetFile.FileDownHelper">
            <summary>
            文件下载类
            </summary>
        </member>
        <member name="M:JFine.Common.DotNetFile.FileDownHelper.FileNameExtension(System.String)">
            <summary>
            参数为虚拟路径
            </summary>
        </member>
        <member name="M:JFine.Common.DotNetFile.FileDownHelper.MapPathFile(System.String)">
            <summary>
            获取物理地址
            </summary>
        </member>
        <member name="M:JFine.Common.DotNetFile.FileDownHelper.DownLoadold(System.String)">
            <summary>
            普通下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.FileDownHelper.DownLoadold(System.String,System.String)">
            <summary>
            普通下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.FileDownHelper.DownLoad(System.String)">
            <summary>
            分块下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.FileDownHelper.ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)">
            <summary>
             输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="_Request">Page.Request对象</param>
            <param name="_Response">Page.Response对象</param>
            <param name="_fileName">下载文件名</param>
            <param name="_fullPath">带文件名下载路径</param>
            <param name="_speed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="T:JFine.Common.DotNetFile.FTPHelper">
            <summary>
            FTP文件操作
            </summary>
        </member>
        <member name="M:JFine.Common.DotNetFile.FTPHelper.Upload(System.Web.UI.WebControls.FileUpload,System.String,System.String,System.String)">
            <summary>
            FTP上传文件
            </summary>
            <param name="fileUpload">上传控件</param>
            <param name="ftpServerIP">上传文件服务器IP</param>
            <param name="ftpUserID">服务器用户名</param>
            <param name="ftpPassword">服务器密码</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.FTPHelper.Download(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            FTP下载文件
            </summary>
            <param name="userId">ftp用户名</param>
            <param name="pwd">ftp密码</param>
            <param name="ftpPath">ftp文件路径</param>
            <param name="filePath">下载保存路径</param>
            <param name="fileName">ftp文件名</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.FTPHelper.DeleteFile(System.String,System.String,System.String,System.String)">
            <summary>
            FTP删除文件
            </summary>
            <param name="ftpPath">ftp文件路径</param>
            <param name="userId">ftp用户名</param>
            <param name="pwd">ftp密码</param>
            <param name="fileName">ftp文件名</param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.DotNetFile.GZipHelper">
            <summary>
            压缩文本、字节或者文件的压缩辅助类
            </summary>
        </member>
        <member name="M:JFine.Common.DotNetFile.GZipHelper.Compress(System.String)">
            <summary>
            压缩字符串
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.GZipHelper.Uncompress(System.String)">
            <summary>
            解压字符串
            </summary>
            <param name="compressedText"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.GZipHelper.Compress(System.Byte[])">
            <summary>
            压缩字节
            </summary>
            <param name="bytData"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.GZipHelper.Decompress(System.Byte[])">
            <summary>
            解压字节
            </summary>
            <param name="bytData"></param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetFile.GZipHelper.CompressFile(System.String,System.String)">
            <summary>
            压缩文件
            </summary>
            <param name="sourceFile">源文件</param>
            <param name="destinationFile">目标文件</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.GZipHelper.DecompressFile(System.String,System.String)">
            <summary>
            解压文件
            </summary>
            <param name="sourceFile">源文件</param>
            <param name="destinationFile">目标文件</param>
        </member>
        <member name="M:JFine.Common.DotNetFile.GZipHelper.DecompressFile(System.String,System.String,System.Boolean)">
            <summary>
            解压文件
            </summary>
            <param name="sourceFile">源文件</param>
            <param name="destinationFile">目标文件</param>
        </member>
        <member name="T:JFine.Common.DotNetFile.UploadHelper">
            <summary>
            文件上传帮助类
            </summary>
        </member>
        <member name="M:JFine.Common.DotNetFile.UploadHelper.FileUpload(System.String,System.Web.UI.WebControls.FileUpload)">
            <summary>
            文件上传
            </summary>
            <param name="path">保存路径</param>
            <param name="filleupload">上传文件控件</param>
            <returns></returns>
        </member>
        <member name="T:JFine.Common.DotNetImage.ImageHelper">
            <summary>
            图片操作类
            </summary>
        </member>
        <member name="M:JFine.Common.DotNetImage.ImageHelper.ImgToBase64String(System.String)">
            <summary>
            图片转为base64编码
            </summary>
            <param name="filePath">路径</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetImage.ImageHelper.Base64ToImage(System.String,System.String)">
            <summary>
            base64编码的文本转为图片
            </summary>
            <param name="photo">base64编码</param>
            <param name="filePath">保存绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.DotNetImage.ImageHelper.Base64ToImage(System.String,System.String,System.String)">
            <summary>
            base64编码的文本转为图片
            </summary>
            <param name="photo">base64编码</param>
            <param name="filePath">保存绝对路径</param>
            /// <param name="filePath">文件名字（带后缀）</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Message.ShortMessage.Send(System.String,System.String)">
            <summary>
            发送手机短信
            </summary>
            <param name="number">手机号码</param>
            <param name="mes">手机信息</param>
        </member>
        <member name="M:JFine.Common.Web.WebCommon.GetMapPath(System.String)">
            <summary>
            获得当前绝对路径
            </summary>
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:JFine.Common.Web.HTMLHelper.CutString(System.String,System.Int32)">
            <summary>
            截取字符长度
            </summary>
            <param name="inputString">字符</param>
            <param name="len">长度</param>
            <returns></returns>
        </member>
        <member name="M:JFine.Common.Web.HTMLHelper.ToHtml(System.String)">
            <summary>
            字符串字符处理
            </summary>
            <param name="chr">等待处理的字符串</param>
            <returns>处理后的字符串</returns>
            //把TXT代码转换成HTML格式
        </member>
        <member name="M:JFine.Common.Web.HTMLHelper.ToTxt(System.String)">
            <summary>
            字符串字符处理
            </summary>
            <param name="chr">等待处理的字符串</param>
            <returns>处理后的字符串</returns>
            //把HTML代码转换成TXT格式
        </member>
        <member name="M:JFine.Common.Web.HTMLHelper.GetMapPath(System.String)">
            <summary>
            获得当前绝对路径
            </summary>
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="T:JFine.Common.Web.OSSuites">
            <summary>标识系统上的程序组</summary>
        </member>
        <member name="T:JFine.Common.Web.OSProductType">
            <summary>标识系统类型</summary>
        </member>
        <member name="F:JFine.Common.Web.OSProductType.WorkStation">
            <summary>工作站</summary>
        </member>
        <member name="F:JFine.Common.Web.OSProductType.DomainController">
            <summary>域控制器</summary>
        </member>
        <member name="F:JFine.Common.Web.OSProductType.Server">
            <summary>服务器</summary>
        </member>
    </members>
</doc>
