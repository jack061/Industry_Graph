<!DOCTYPE html>
<html lang="en">
<head>
    <link href="/Plugins/JFine.VMW/Content/css/BigData.css" rel="stylesheet" type="text/css" />
    <link href="/Plugins/JFine.VMW/Content/css/index.css" rel="stylesheet" type="text/css" />
    <link href="/Plugins/JFine.VMW/Content/css/index01.css" rel="stylesheet" type="text/css" />
    <script src="/Plugins/JFine.VMW/Content/js/jquery.js"></script>
    <link href="/Plugins/JFine.VMW/Content/js/bstable/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="/Plugins/JFine.VMW/Content/js/bstable/css/bootstrap-table.css" rel="stylesheet" type="text/css" />
    <link href="/Plugins/JFine.VMW/Content/css/Security_operation.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/Plugins/JFine.VMW/Content/js/artDialog/skins/default.css" type="text/css" />
    <script src="/Plugins/JFine.VMW/Content/js/laydate.js"></script>
    <script src="~/Content/js/signalR/jquery.signalR-2.2.3.min.js"></script>
    <script src="/Plugins/JFine.VMW/Content/js/signalR/VMWSignalR.js"></script>
    <script type="text/javascript" src="~/signalr/hubs"></script>

    <script src="/Content/js/openlayers_v5.3.0/ol.js"></script>
    <link href="/Content/js/openlayers_v5.3.0/ol.css" rel="stylesheet" />
    <script src="/Content/js/vue2.6.7/vue.min.js"></script>
    <script src="/Plugins/JFine.VMW/Content/js/Home_page.js"></script>
    <link href="/Content/js/viewerjs/viewer.min.css" rel="stylesheet" />
    @*<script src="/Content/js/viewerjs/viewer.min.js"></script>*@
    <script src="/Content/js/viewerjs/viewer.js"></script>
    <meta charset="UTF-8">
    <title>VMW服务平台</title>

    <style type="text/css">
        .checkbox {
            margin: 5px 15px;
        }

        .marker {
            width: 20px;
            height: 20px;
            border: 1px solid #088;
            border-radius: 10px;
            background-color: #0FF;
            opacity: 0.5;
        }

        .address {
            text-decoration: none;
            color: #aa3300;
            font-size: 14px;
            font-weight: bold;
            text-shadow: black 0.1em 0.1em 0.2em;
        }

        .ol-popup {
            position: absolute;
            background-color: #eeeeee;
            -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
            filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
            padding: 15px;
            border-radius: 10px;
            border: 1px solid #cccccc;
            bottom: 12px;
            left: -50px;
            min-width: 280px;
            opacity: 0.9;
        }

            .ol-popup:after, .ol-popup:before {
                top: 100%;
                border: solid transparent;
                content: " ";
                height: 0;
                width: 0;
                position: absolute;
                pointer-events: none;
            }

            .ol-popup:after {
                border-top-color: #eeeeee;
                border-width: 10px;
                left: 48px;
                margin-left: -10px;
            }

            .ol-popup:before {
                border-top-color: #cccccc;
                border-width: 11px;
                left: 48px;
                margin-left: -11px;
            }

        .ol-popup-closer {
            text-decoration: none;
            position: absolute;
            top: 2px;
            right: 8px;
        }

            .ol-popup-closer:after {
                content: "✖";
            }
    </style>

    <script>

        function zoomFull() {
            //var ele = $("#vmw_div");

            var ele = document.getElementById("vmw_div");
            launchIntoFullscreen(ele);
        }

        function launchIntoFullscreen(element) {
            if (element.requestFullscreen) {
                element.requestFullscreen();
            }
            else if (element.mozRequestFullScreen) {
                element.mozRequestFullScreen();
            }
            else if (element.webkitRequestFullscreen) {
                element.webkitRequestFullscreen();
            }
            else if (element.msRequestFullscreen) {
                element.msRequestFullscreen();
            }
        }

        function exitFullscreen() {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            } else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            }
        }
        function playAudio()
        {
            $("#audioPlay").play();
        }
    </script>

</head>
<body>
    <audio id="audioPlay" src="/Content/Files/Voice/warning.wav">
        <source type="audio/wav" />
    </audio>
    <div id="vmw_div" class="data_bodey">
        <div class="index_nav" style="display: flex;">
            <div class="left nav" style="width:35%;">

            </div>
            <div class="header_center">
                <h2 style="margin-top:7px;"><strong>智能视频监控预警平台</strong></h2>
            </div>
            <div class="right nav text_right" style="width:35%;">
                <ul style="height: 30px; margin-bottom: 0px;">
                    <li class="r_right total_chose_pl nav_active" onclick="window.location.href = '/VMW/VMWHome/VideoIndex?mapCode=KT001';">实时监控</li>
                </ul>
            </div>
            <div class="clear"></div>
        </div>
        <div class="index_tabs">
            <div class="inner" style="height: 100%;">
                <!--左侧-->
                <div class="left_cage">
                    <div class="dataAllBorder01 cage_cl" style=" height: 49%;">
                        <div class="dataAllBorder02">
                            <div class="data_tit1">预警趋势</div>
                            <p class="data_chart" id="rodeAbook"></p>
                        </div>
                    </div>
                    <div class="dataAllBorder01 cage_cl" style="margin-top: 1.5% !important; height: 49%;">
                        <div class="dataAllBorder02">
                            <div class="data_tit1">节点数量分布图</div>
                            <p class="data_chart" id="cameraWarnAnalyze"></p>
                        </div>
                    </div>
                </div>

                <!--中间-->
                <div class="center_cage">
                    <div class="dataAllBorder01 cage_cl" style=" height: 100%; position: relative;">
                        <div class="dataAllBorder02" style="position: relative; overflow: hidden;">
                            <div style="width:180px; height:50px; position:absolute; right:10px; top:10px;z-index:10;">
                                <ul style="color: white;list-style: none;">
                                    <li style="display:inline-block;"><img style="height:16px;" src="/Plugins/JFine.VMW/Content/img/v_g.png" alt="正常">正常</li>
                                    <li style="margin-left:4px;display:inline-block;"><img style="height:16px;" src="/Plugins/JFine.VMW/Content/img/v_r.png" alt="预警">预警</li>
                                    <li style="margin-left:4px;display:inline-block;"><img style="height:16px;" src="/Plugins/JFine.VMW/Content/img/v_b.png" alt="离线">离线</li>
                                </ul>
                            </div>
                            <!--标题栏-->
                            <div class="map_title_box" style="height: 6%">
                                <div class="map_title_innerbox">
                                    <div class="map_title">实时地图</div>
                                </div>
                            </div>
                            <div class="map" id="map">
                                <div id="popup" class="ol-popup">
                                    <div class="pophead" style="width:100%;height: 20px;">
                                        <div id="popup-title" style="font:bold 15px sans-serif;align:left;position: absolute;top: 5px;left: 8px;color: #000000">测试点信息</div>
                                        <a href="#" id="popup-closer" class="ol-popup-closer" style="color:#8e908c;"></a>
                                    </div>
                                    <div id="popup-content" style="padding: 10px"></div>
                                </div>
                            </div>
                            <div id="label" style="display:none">
                                <div id="marker" class="marker" title="Marker">
                                    <a class="address" id="address" target="_blank" href="http://www.openlayers.org">标注点</a>
                                </div>
                            </div>
                            <!--地图工具栏-->
                            <div class="map_tool_outbox">
                                <span class="map_tool" onclick="zoomFull()">
                                    <a class="map_tool_inner" title="全图"></a>
                                </span>
                                <!--
                                <span class="map_tool" onclick="zoomOut()">
                                    <a class="map_tool_inner" title="放大" style="background-position-x:-36px"></a>
                                </span>
                                <span class="map_tool" onclick="zoomIn()">
                                    <a class="map_tool_inner" title="缩小" style="background-position-x:-72px"></a>
                                </span>
                                <span class="map_tool" onclick="showHeatMap()">
                                    <a class="map_tool_inner" title="倒退视图" style="background-position-x:-108px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner" title="前进视图" style="background-position-x:-144px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner display_type_btn" title="专题地图" style="background-position-x:-180px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner city_chose_btn" title="城市定位" style="background-position-x:-432px"></a>
                                </span>
                                <span class="map_tool" id="btnBuffer">
                                    <a class="map_tool_inner" title="缓冲区分析" style="background-position-x:-216px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner addition_check_btn check_btn" title="地址检索" style="background-position-x:-252px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner chemistry_check_btn check_btn" onclick="chemistryCheck()" title="危化品检索" style="background-position-x:-288px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner enterprise_check_btn check_btn" onclick="enterpriseCheck()" title="企业检索" style="background-position-x:-324px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner car_check_btn check_btn" onclick="carCheck()" title="车辆检索" style="background-position-x:-360px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner" onclick="Search()" title="搜索" style="background-position-x:-468px"></a>
                                </span>
                                <span class="map_tool">
                                    <a class="map_tool_inner" onclick="cancel()" id="fresh_tool" title="清空" style="background-position-x:-396px"></a>
                                </span>
                                <span class="map_tool">
                                    <input type="text" id="txtCoord" style="width:150px;visibility:hidden" />
                                </span>
                                -->
                            </div>
                        </div>
                    </div>
                </div>

                <!--右侧-->
                <div class="right_cage">
                    <!--顶部切换位置-->
                    <div class="dataAllBorder01 cage_cl" style=" height: 19%">
                        <div class="dataAllBorder02" id="cage_cl">
                            <!--<div class="data_tit1">节点数量统计</div>-->
                            <div class="analysis">节点数量</div>
                            <div class="depart_number_box">
                                <ul class="depart_number_cage">
                                    <li class="depart_name"><img style="height:26px;" src="/Plugins/JFine.VMW/Content/img/sum_g.png" alt="正常">总数量：</li>
                                    <li class="depart_number" id="sumCount">0</li>
                                </ul>
                                <ul class="depart_number_cage">
                                    <li class="depart_name"><img style="height:26px;" src="/Plugins/JFine.VMW/Content/img/v_g.png" alt="正常">正常：</li>
                                    <li class="depart_number" id="NormalCount">0</li>
                                </ul>
                                <ul class="depart_number_cage" style="margin-bottom: 0px;">
                                    <li class="depart_name"><img style="height:26px;" src="/Plugins/JFine.VMW/Content/img/v_r.png" alt="预警">预警：</li>
                                    <li class="depart_number" id="WarnCount">0</li>
                                </ul>
                                <ul class="depart_number_cage" style="margin-bottom: 0px;">
                                    <li class="depart_name"><img style="height:26px;" src="/Plugins/JFine.VMW/Content/img/v_b.png" alt="离线">离线：</li>
                                    <li class="depart_number" id="UnonlineCount">0</li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="dataAllBorder01 cage_cl" style="margin-top: 1.5% !important;  height: 19%">
                        <div class="dataAllBorder02" id="cage_cl">
                            <!--<div class="data_tit1">节点数量统计</div>-->
                            <div class="analysis">预警数量</div>
                            <div class="depart_number_box">
                                <ul class="depart_number_cage">
                                    <li class="depart_name">总数量：</li>
                                    <li class="depart_number" id="WAmount">0</li>
                                </ul>
                                <ul class="depart_number_cage">
                                    <li class="depart_name">今日数量：</li>
                                    <li class="depart_number" id="WCurrentAmount">0</li>
                                </ul>
                                <ul class="depart_number_cage" style="margin-bottom: 0px;">
                                    <li class="depart_name">应闭环数：</li>
                                    <li class="depart_number" id="closeAmount">0</li>
                                </ul>
                                <ul class="depart_number_cage" style="margin-bottom: 0px;">
                                    <li class="depart_name">实际闭环数：</li>
                                    <li class="depart_number" id="closedAmount">0</li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div id="TopN" class="dataAllBorder01 cage_cl" style=" margin-top: 1.5% !important; height: 59%;">
                        <div class="dataAllBorder02">
                            <div class="analysis">最近预警 TOP10<div style="float:right; margin-right:5px;"><a id="moreWarning" href="#" onclick="openMoreWarn();">更多</a></div></div>
                            <div id="warnList" style="overflow-y:auto;height:90%">
                                <div v-for="warn in topNWarnList" class="warnList">
                                    <div style="background-color:#CCCCCC;margin:5px;">
                                        <div style="float:left;width:50%">
                                            <img style="width:98%;" v-bind:src="warn.ImageURL" />
                                        </div>
                                        <div>
                                            <div>{{warn.CameraName}}</div>
                                            <div style="color:red;">{{warn.DES}}</div>
                                            <div>{{warn.WarningDate}}</div>
                                            <div>
                                                <span v-if="warn.ConfirmStatus == '未确认'" class="label label-default">{{warn.ConfirmStatus}}</span>
                                                <span v-else-if="warn.ConfirmStatus == '已忽略'" class="label label-warning">{{warn.ConfirmStatus}}</span>
                                                <span v-else class="label label-success">{{warn.ConfirmStatus}}</span>
                                                <span v-if="warn.DealStatus == '未处理'" class="label label-default">{{warn.DealStatus}}</span>
                                                <span v-else-if="warn.DealStatus == '已忽略'" class="label label-warning">{{warn.DealStatus}}</span>
                                                <span v-else class="label label-success">{{warn.DealStatus}}</span>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>

        </div>
    </div>

    <script src="/Plugins/JFine.VMW/Content/js/echarts-all.js"></script>
    <script src="/Plugins/JFine.VMW/Content/js/bstable/js/bootstrap.min.js"></script>
    <script src="/Plugins/JFine.VMW/Content/js/bstable/js/bootstrap-table.js"></script>
    <script type="text/javascript" src="/Plugins/JFine.VMW/Content/js/jquery.pagination.js"></script>
    <script src="/Plugins/JFine.VMW/Content/js/bstable/js/bootstrap-table-zh-CN.min.js"></script>

    <!--<script src="js/MainMap.js"></script>-->
    <script src="/Plugins/JFine.VMW/Content/js/Home_page.js"></script>
    <script src="/Plugins/JFine.VMW/Content/js/artDialog/artDialog.js"></script>
    <script src="/Plugins/JFine.VMW/Content/js/artDialog/plugins/iframeTools.source.js"></script>
    <script>
        $.request = function (name) {
            var search = location.search.slice(1);
            var arr = search.split("&");
            for (var i = 0; i < arr.length; i++) {
                var ar = arr[i].split("=");
                if (ar[0] == name) {
                    if (decodeURI(ar[1]) == 'undefined') {
                        return "";
                    } else {
                        return decodeURI(ar[1]);
                    }
                }
            }
            return "";
        }
    </script>
    <script>
        var mapCode = $.request("mapCode");
        var map;
        var epsg = '';
        var bounds = [];
        var mapUrl = "";
        var vectorLayer;
        var projection;
        var format = 'image/png';
        var popup;
        //获取id为popup的div标签
        var container = document.getElementById('popup');
        //获取id为popup-content的div标签
        var content = document.getElementById('popup-content');
        //获取id为popup-closer的a标签
        var closer = document.getElementById('popup-closer');
        var popTitle = document.getElementById('popup-title');

        if (!!mapCode) {
            $.ajax({
                url: "/VMW/VMWMap/GetMapFromCode",
                data: { code: mapCode },
                dataType: "json",
                async: false,
                success: function (data) {
                    mapUrl = data.ImageURL;
                    epsg = data.EPSG;
                    bounds = [data.R_Left, data.R_Bottom, data.R_Right, data.R_Top];
                    initMap();
                }
            });
        }

        function initMap() {
            var format = 'image/png';
            var proj = new ol.proj.Projection({
                code: epsg,
                extent: bounds
            })

            //矿图
            var ImageMap = new ol.layer.Image({
                source: new ol.source.ImageStatic({
                    url: mapUrl,
                    projection: proj,
                    imageExtent: bounds
                })
            });

            //设置地图投影
            projection = new ol.proj.Projection({
                code: epsg,//投影编码
                units: 'degrees',
                axisOrientation: 'neu'
            });

            vectorLayer = new ol.layer.Vector({
                source: new ol.source.Vector()
            })

            //设置地图
            map = new ol.Map({
                //地图中的比例尺等控制要素
                controls: ol.control.defaults({
                    attribution: false
                }).extend([
                    new ol.control.ScaleLine()
                ]),
                //设置显示的容器
                target: 'map',
                //设置图层
                layers: [
                    //添加图层
                    ImageMap, vectorLayer
                ],
                //设置视图
                view: new ol.View({
                    //设置投影
                    projection: projection
                })
            });

            //地图显示
            map.getView().fit(bounds, map.getSize());
            addCameras();
            addPopupLayer();
            addMapEvent();
        }

        function addCameras() {
            //添加摄像头
            $.ajax({
                url: "/VMW/VMWCamera/GetCameraList",
                dataType: "json",
                async: true,
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        //坐标
                        var cameraPoint = ol.proj.fromLonLat([parseFloat(data[i].Lng), parseFloat(data[i].Lat)], projection);
                        var cameraData = {
                            //点要素
                            geometry: new ol.geom.Point(cameraPoint),
                            //名称属性
                            name: data[i].Name,
                            data: data[i]

                        }
                        addVectorMarker(cameraData);
                    }
                }
            });
        }


        function addPopupLayer() {
            //初始化一个覆盖层
            popup = new ol.Overlay({
                //元素内容
                element: container,
                //If set to true the map is panned when calling setPosition,
                //so that the overlay is entirely visible in the current viewport.
                //The default is false.
                autoPan: true,
                ////覆盖层如何与位置坐标匹配
                positioning: 'bottom-center',
                //事件传播到地图视点的时候是否应该停止
                stopEvent: false,
                //The animation options used to pan the overlay into view.
                //This animation is only used when autoPan is enabled.
                autoPanAnimation: {
                    //动画持续时间
                    duration: 250
                }
            });
            closer.onclick = function () {
                popup.setPosition(undefined);
                closer.blur();
                return false;
            };
            //将覆盖层添加到map中
            map.addOverlay(popup);
        }



        //为要素添加信息的函数
        function addFeatureInfo(info) {
            /*
                //创建一个a标签元素
                var elementA = document.createElement('a');
                //设置a标签的样式类
                elementA.className = 'markerInfo';
                //设置a标签的超链接地址
                elementA.href = info.data.WebURL;
                //设置a标签的文本内容
                setInnerText(elementA, info.data.Name);
                //将a标签元素添加到内容div标签中
                content.appendChild(elementA);

                //创建一个div标签元素
                var elementDiv = document.createElement('div');
                //设置div标签的内容
                setInnerText(elementDiv, info.data.Usage);
                //将div标签加入到内容div标签中
                content.appendChild(elementDiv);*/
            if (info.data.Status == 0) {
                $("#popup").css({ "background-color": "#eeeeee" });
            }
            if (info.data.Status == 1) {
                $("#popup").css({ "background-color": "#33FF99" });
            }
            if (info.data.Status == 2) {
                $("#popup").css({ "background-color": "#FF3333" });
            }

            popTitle.innerHTML = info.data.Name;
            var str = '';
            str += "<div><table><tbody><tr>"
                  + "<td width='80px' align='right'>预警位置：</td>"
                  + "<td width='150px' align='left'><font >" + info.data.Position + "</font></td>"
                  //+ "<td width='150px' height='180px' id='<strong>chartcontainer</strong>' rowspan='4'></td>"
                  + "</tr>"
                  + "<tr>"
                  + "<td width='80px' align='right'>预警项目：</td>"
                  + "<td width='150px' align='left'><font >" + info.data.Usage + "</font></td>"
                  + "</tr>"
                  + "<tr>"
                  + "<td width='80px' align='right'>预警次数：</td>"
                  + "<td width='150px' align='left'><font >" + info.data.WarningCount + "</font></td>"
                  + "</tr>"
                  + "<tr>"
                  + "<td width='80px' align='right'>最近预警时间:</td>"
                  + "<td width='150px' align='left'><font >" + info.data.LastWDT + "</font></td>"
                  + "</tr>"
                   + "<tr>"
                  + "<td align='left'colspan='2'><iframe id='" + info.data.Id + "' class='plugin' style='width:100%;' height='200' frameborder=0 src='/VMW/VMWCamera/HKVideo?ip=" + info.data.IP + "&port=" + info.data.Port + "&account=" + info.data.Account + "&password=" + info.data.PassWord + "'></iframe></td>"
                  + "</tr>"
                  + "</tbody></table></div>";
            content.innerHTML = str;
        }

        function addMapEvent() {
            //地图的点击事件
            map.on('click', function (evt) {
                //获取坐标点
                var coordinate = evt.coordinate;

                //forEachLayerAtPixel(pixel, callback, opt_this, opt_layerFilter, opt_this2)
                //Detect layers that have a color value at a pixel on the viewport,
                //and execute a callback with each matching layer.
                //Layers included in the detection can be configured through opt_layerFilter.
                var feature = map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {
                    //在视口中遍历所有具有像素颜色的图层，如果图层存在，则返回
                    return feature;
                });

                if (feature) {
                    //将内容div的内容清空
                    content.innerHTML = '';
                    //添加要素信息
                    addFeatureInfo(feature.values_);
                    var old_coordinate = popup.getPosition();
                    //如果当前popup覆盖层没有坐标，则设置坐标
                    if (old_coordinate == undefined || (old_coordinate[0] != coordinate[0] && old_coordinate[1] != coordinate[1])) {
                        popup.setPosition(coordinate);
                    }
                }
            });

            //为map注册一个pointermove事件的监听
            //pointermove事件
            //Triggered when a pointer is moved.
            //Note that on touch devices this is triggered when the map is panned, so is not the same as mousemove.
            map.on('pointermove', function (e) {
                //Returns the map pixel position for a browser event relative to the viewport.
                //获取map的像素位置信息
                var pixel = map.getEventPixel(e.originalEvent);
                //hasFeatureAtPixel(pixel, opt_options)
                //Detect if features intersect a pixel on the viewport.
                //map视口中是否包含某个要素
                var hit = map.hasFeatureAtPixel(pixel);
                //设置符合当前条件的鼠标样式
                map.getTargetElement().style.cursor = hit ? 'pointer' : '';
            });
        }



        //添加矢量图层标签
        function addVectorMarker(featureData) {
            //初始化要素
            var iconFeature = new ol.Feature(featureData);
            iconFeature.setId(featureData.data.Code);
            //为点要素添加样式
            iconFeature.setStyle(createLabelStyle(featureData.data));
            //清楚坐标点
            //vectorLayer.getSource().clear();
            var sss = vectorLayer.getSource();
            //将当前要素添加到矢量数据源中
            vectorLayer.getSource().addFeature(iconFeature);
        }

        function createLabelStyle(cameraData) {
            var pointImage = "";
            //var cameraData = feature.get('data');
            if (cameraData.Status == 0) {
                pointImage = 'v_b_24';
            } else if (cameraData.Status == 1) {
                pointImage = 'v_g_24';
            } else if (cameraData.Status == 2) {
                pointImage = 'v_r_24';
            } else {
                pointImage = 'pushmessage_localize_01';
            }
            //返回一个样式
            return new ol.style.Style({
                //把点的样式换成ICON图标
                image: new ol.style.Icon({
                    //控制标注图片和文字之间的距离
                    anchor: [0.5, 30],
                    //标注样式的起点位置
                    anchorOrigin: 'top-right',
                    //X方向单位：分数
                    anchorXUnits: 'fraction',
                    //Y方向单位：像素
                    anchorYUnits: 'pixels',
                    //偏移起点位置的方向
                    offsetOrigin: 'top-right',
                    //透明度
                    opacity: 0.75,
                    //图片路径
                    src: '/Plugins/JFine.VMW/Content/img/' + pointImage + '.png'
                }),
                //文本样式
                text: new ol.style.Text({
                    //对齐方式
                    textAlign: 'center',
                    //文本基线
                    textBaseline: 'middle',
                    //字体样式
                    font: 'normal 14px 微软雅黑',
                    //文本内容
                    text: cameraData.Name,
                    //填充样式
                    fill: new ol.style.Fill({
                        color: '#aa3300'
                    }),
                    //笔触
                    stroke: new ol.style.Stroke({
                        color: '#ffcc33',
                        width: 2
                    })
                })
            });
        };

        //添加覆盖标注
        function addOverlayLabel(coordinate) {
            //创建一个div元素
            var elementDiv = document.createElement('div');
            //设置div元素的样式类
            elementDiv.className = 'marker';
            //设置div元素的title属性
            elementDiv.title = '标注点';

            //获取id为label的div标签
            var overlay = document.getElementById('label');
            //将新创建的div标签添加到overlay中
            overlay.appendChild(elementDiv);

            //创建一个a标签元素
            var elementA = document.createElement('a');
            //设置a标签的样式类
            elementA.className = 'address';
            //设置a标签的链接地址
            elementA.href = '#';
            //设置a标签的超链接文本
            setInnerText(elementA, elementDiv.title);
            //将a标签元素添加到div标签元素中
            elementDiv.appendChild(elementA);

            //新建一个覆盖层
            var newMarker = new ol.Overlay({
                //设置位置为当前鼠标点击的坐标
                position: coordinate,
                //设置覆盖层与位置之间的匹配方式
                positioning: 'center-center',
                //覆盖层元素
                element: elementDiv,
                //事件传播到地图视点的时候是否应该停止
                stopEvent: false
            });
            //将覆盖层添加到map中
            map.addOverlay(newMarker);

            //新建一个文本覆盖层
            var newText = new ol.Overlay({
                //设置位置为当前鼠标点击的坐标
                position: coordinate,
                //覆盖层元素
                element: elementA
            });
            //将文本覆盖层添加到map中
            map.addOverlay(newText);
        }

        function setInnerText(element, text) {
            if (typeof element.textContent == 'string') {
                element.textContent = text;
            } else {
                element.innerText = text;
            }
        }

        //更新地图上的摄像头标注
        function updateCameraInfo(cameraInfo) {
            var f = vectorLayer.getSource().getFeatureById(cameraInfo.Code);
            if (f) {
                //var p = f.getProperties();
                f.values_.data = cameraInfo;

                var iconStyle = createLabelStyle(cameraInfo);

                f.setStyle(iconStyle);
            }
        }

    </script>
    <script>

        $(function () {
            initControl();
        });

        //初始化组件
        function initControl() {
            initCameraCount();
            initWarningStatCount();
            cameraWarnAnalyze();

        }

        //初始化 摄像头数量
        function initCameraCount() {
            $.ajax({
                url: "/VMW/VMWCamera/GetCameraCount",
                dataType: "json",
                async: true,
                success: function (data) {
                    $("#sumCount").html(data.sumCount);
                    $("#NormalCount").html(data.normalCount);
                    $("#WarnCount").html(data.warnCount);
                    $("#UnonlineCount").html(data.unonlineCount);

                }
            });
        }

        //初始化 预警数量统计
        function initWarningStatCount() {
            $.ajax({
                url: "/VMW/VMWWarning/GetWarningStatData",
                dataType: "json",
                async: true,
                success: function (data) {
                    if (data.length > 0) {
                        $("#WAmount").html(data[0].WAmount);
                        $("#WCurrentAmount").html(data[0].WCurrentAmount);
                        $("#closeAmount").html(data[0].closeAmount);
                        $("#closedAmount").html(data[0].closedAmount);
                    }
                }
            });
        }

        //打开预警列表
        function openMoreWarn() {
            //框架内
            if (self != top) {
                var parentId = top.$.jfinetab.getCurrentTabId();
                top.$.jfinetab.addTabContent("/VMW/VMWWarning/Index", "预警管理", parentId + "_warn", parentId);
            } else {
                window.open('/Home/Index?jfLink=/VMW/VMWWarning/Index');
            }
        }

        var warnQuantityChart = echarts.init($("#cameraWarnAnalyze")[0]);
        function cameraWarnAnalyze() {

            option = {
                tooltip: {
                    trigger: 'axis'
                },
                grid: {
                    x: 25,
                    y: 30,
                    x2: 20,
                    y2: 20,
                    borderWidth: 0
                },

                calculable: false,
                legend: {
                    data: ['预警数', '准确数', '准确率'],
                    textStyle: {
                        color: "#e9ebee"

                    }
                },
                xAxis: [
                    {
                        type: 'category',
                        data: [],
                        splitLine: {
                            show: false
                        },
                        axisLabel: {
                            show: true,
                            textStyle: {
                                color: '#a4a7ab',
                                align: 'center'
                            }
                        }

                    }
                ],
                yAxis: [
                    {
                        type: 'value',
                        name: '预警数',
                        axisLabel: {
                            formatter: '{value} ',
                            textStyle: {
                                color: '#a4a7ab',
                                align: 'right'
                            }
                        },
                        splitLine: {
                            show: false
                        }
                    },
                    {
                        type: 'value',
                        name: '准确率',
                        axisLabel: {
                            formatter: '{value} ',
                            textStyle: {
                                color: '#a4a7ab',
                                align: 'right'
                            }
                        },
                        splitLine: {
                            show: false
                        }
                    },

                ],
                series: [
                ]
            };
            $.ajax({
                url: "/VMW/VMWCamera/GetCameraWarnCount",
                dataType: "json",
                async: true,
                success: function (data) {
                    option.xAxis[0].data = data.nameList;

                    var series = [

            {
                name: '预警数',
                type: 'bar',
                //stack: '预警数',
                data: data.warnCount
            },
            {
                name: '准确数',
                type: 'bar',
                //stack: '预警数',
                data: data.rightCount
            },

            {
                name: '准确率',
                type: 'line',
                yAxisIndex: 1,
                data: data.rightPer
            }
                    ];
                    option.series = series;
                    warnQuantityChart.setOption(option);
                }

            });

        }

    </script>

    <script>
        var imageviewer;
        //此模块用vue来实现
        var topWarn = new Vue({
            el: "#TopN",
            data: {
                topNWarnList: []
            },
            created: function () {
                var self = this;
                $.ajax({
                    url: "/VMW/VMWWarning/GetTopWarnList?topN=10",
                    type: 'get',
                    dataType: 'json',
                }).then(function (res) {
                    self.topNWarnList = res;
                }).fail(function () {
                    console.log('TopN加载失败');
                });
            },
            updated: function () {
                imageviewer = new Viewer(document.getElementById('warnList'));
            }
        });


        function addWarn(warnInfo) {
            var c_lable = "";
            var d_lable = "";
            if (warnInfo.ConfirmStatus == "未确认") {
                c_lable = "default";
            } else if (warnInfo.ConfirmStatus == "已忽略") {
                c_lable = "warning";
            } else {
                c_lable = "success";
            }

            if (warnInfo.DealStatus == "未处理") {
                d_lable = "default";
            } else if (warnInfo.DealStatus == "已忽略") {
                d_lable = "warning";
            } else {
                d_lable = "success";
            }
            var html = '<div class="warnList">'
                                    + '<div style="background-color:#CCCCCC;margin:5px;">'
                                        + '<div style="float:left;width:50%">'
                                            + '<img style="width:98%;" src="' + warnInfo.ImageURL + '" />'
                                        + '</div>'
                                        + '<div>'
                                            + '<div>' + warnInfo.CameraName + '</div>'
                                            + '<div style="color:red;">' + warnInfo.DES + '</div>'
                                            + '<div>' + warnInfo.WarningDate + '</div>'
                                            + '<div>'
                                                + '<span class="label label-' + c_lable + '">' + warnInfo.ConfirmStatus + '</span>'
                                                + '<span class="label label-' + d_lable + '">' + warnInfo.DealStatus + '</span>'
                                            + '</div>'
                                        + '</div>'

                                    + '</div>'

                               + ' </div>';
            $(".warnList:first").before(html);
            $(".warnList:last").remove();
            imageviewer.destroy();
            imageviewer = new Viewer(document.getElementById('warnList'));
        }

    </script>
    @Html.AntiForgeryToken()
</body>
</html>
